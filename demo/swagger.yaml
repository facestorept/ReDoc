swagger: '2.0'

info:
  version: '2.0.0'
  title: Facestore API
  description: |
      This is a reference to Facestore API.

      # Introduction
      This API is documented in **OpenAPI format** and provided by [facestore.pt](http://facestore.pt) team.

      # About the API
      Through the Facestore API your applications can retrieve and manage Facestore platform content in your store.
      The base address of the API is `https://api.facestore.pt`. There are several endpoints at that address, each with its own unique path.
      All endpoints are private and you need the permissions to access them.
      To get an API Token you have to be client of Facestore and access your personal account to request it (see the next topic).

      # Get API Token
      To consume the Facestore API is take the unique token to identify your requests. You can do that accessing the store manager admin and doing the following steps:
      1. Go to ``configurations > API`` section.
      2. Copy the unique token.

      # Requests
      The API is based on REST principles: data resources are accessed via standard HTTPS requests in UTF-8 format to an API endpoint. Where possible, the API strives to use appropriate HTTP verbs for each action:
      | VERB     | DESCRIPTION                                            |
      | -------- |:-------------:                                         |
      | GET      | Used for retrieving resources.                         |
      | POST     | Used for creating resources.                           |
      | PUT      | Used for changing/replacing resources or collections.  |
      | PATCH    | Used for changing/replacing partial resources.         |
      | DELETE   | Used for deleting resources.                           |

      # Responses
      Response Status Codes
      The API uses the following response status codes, as defined in the RFC 2616 and RFC 6585:

      | STATUS CODE | DESCRIPTION                                                                                                                                                                                                                       |
      |:-----------:|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|
      | 200         | OK - The request has succeeded. The client can read the result of the request in the body and the headers of the response.                                                                                                        |
      | 201         | Created - The request has been fulfilled and resulted in a new resource being created.                                                                                                                                            |
      | 202         | Accepted - The request has been accepted for processing, but the processing has not been completed.                                                                                                                               |
      | 204         | No Content - The request has succeeded but returns no message body.                                                                                                                                                               |
      | 304         | Not Modified. See Conditional requests.                                                                                                                                                                                           |
      | 400         | Bad Request - The request could not be understood by the server due to malformed syntax. The message body will contain more information; see Error Details.                                                                       |
      | 401         | Unauthorized - The request requires user authentication or, if the request included authorization credentials, authorization has been refused for those credentials.                                                              |
      | 403         | Forbidden - The server understood the request, but is refusing to fulfill it.                                                                                                                                                     |
      | 404         | Not Found - The requested resource could not be found. This error can be due to a temporary or permanent condition.                                                                                                               |
      | 429         | Too Many Requests - Rate limiting has been applied.                                                                                                                                                                               |
      | 500         | Internal Server Error. You should never receive this error because our clever coders catch them all ... but if you are unlucky enough to get one, please report it to us through a comment at the bottom of this page.            |
      | 502         | Bad Gateway - The server was acting as a gateway or proxy and received an invalid response from the upstream server.                                                                                                              |
      | 503         | Service Unavailable - The server is currently unable to handle the request due to a temporary condition which will be alleviated after some delay. You can choose to resend the request again.                                    |

      # Rate limiting
      To make the API fast for everybody, rate limits apply.

      Rate limiting is applied on an application basis (based on client id), regardless of how many users are using it.

      If you get status code 429, it means that you have sent too many requests. If this happens, have a look in the Retry-After header, where you will see a number displayed. This is the amount of seconds that you need to wait, before you can retry sending your requests.

      You can check the returned HTTP headers of any API request to see your current rate limit status:

      ```
      curl -i https://api.facestore.pt/v1/sample
      HTTP/1.1 200 OK
      Date: Mon, 01 Dec 2016 17:27:06 GMT
      Status: 200 OK
      X-RateLimit-Limit: 60
      X-RateLimit-Remaining: 56
      X-RateLimit-Reset: 1372700873
      ```

      The headers tell you everything you need to know about your current rate limit status:

      | HEADER NAME           | DESCRIPTION                                                                     |
      |:---------------------:|:-------------------------------------------------------------------------------:|
      | X-RateLimit-Limit   | The maximum number of requests that the consumer is permitted to make per hour. |
      | X-RateLimit-Remaining | The number of requests remaining in the current rate limit window.              |
      | X-RateLimit-Reset   | The time at which the current rate limit window resets in UTC epoch seconds.    |

      # Timestamps
      Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with zero offset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an product is created), an additional field will show the precision; see for example, created_at in an product object.

      # Error Details
      The API uses the following format to describe unsuccessful responses, return information about the error as an error JSON object containing the following information::

      | KEY         | VALUE TYPE   | VALUE DESCRIPTION |
      |:-----------:|:------------:|:-----------------:|
      | status_code | integer    | The HTTP status code (also returned in the response header; see Response Status Codes for more information). |
      | message     | string     | A short description of the cause of the error. |

  x-logo:
    url: '../assets/logo.png'
    backgroundColor: '#FFFFF'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: Facestore API team
    email: apihelp@facestore.pt
    url: http://facestore.pt

host: api.facestore.local

basePath: /v1

schemes:
  - http

consumes:
  - application/json
  - multipart/form-data

produces:
  - application/json

responses:
  401:
    description: Unauthorized
  403:
    description: Forbidden
  406:
    description: Not Acceptable
  415:
    description: Unsupported Media Type
  204:
    description: No Content Exist
    schema:
      type: object
      properties:
        code:
          type: integer
          example:
            204
        message:
          type: object
          properties:
            errors:
              type: object
              properties:
                fields:
                  type: array
  422:
    description: Content body error
    schema:
      type: object
      properties:
        code:
          type: integer
          example:
            422
        message:
          type: object
          properties:
            errors:
              type: object
              properties:
                fields:
                  type: array

tags:
  - name: Brands
    description: Everything about your Brands

  - name: Categories
    description: Everything about your Categories

  - name: Customers
    description: Everything about your Customers

  - name: Customers Login
    description: Everything about your Customers Login

  - name: Customers Address
    description: Everything about your Customers Address

  - name: Orders
    description: Everything about your Orders

  - name: Payments
    description: Everything about your Payments

  - name: Products
    description: Everything about your Products

  - name: Products Discounts
    description: Everything about your Products Discounts

  - name: Products Attributes
    description: Everything about your Products Attributes

  - name: Products Uploads
    description: Everything about your Products Uploads

  - name: Products Variants
    description: Everything about your Products Variants

  - name: Products Variants Discounts
    description: Everything about your Products Variants Discounts

  - name: Shippings
    description: Everything about your Shippings

  - name: Taxes
    description: Everything about your Taxes

  - name: Settings
    description: Everything about your Settings

  - name: Zip Code
    description: Everything about your Zip Code

paths:
  /brands:
    get:
      tags:
        - Brands
      description: |
        Returns all brands from the system that the user has access to

        ### Includes
        You can give the following values on includes parameter: `routes, products`
      operationId: getBrands
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/OrderByParam'
      responses:
        200:
          description: Brands response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Brand'
              meta:
                $ref: '#/definitions/MetaPartialResponse'
        204:
          $ref: '#/responses/204'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/brands");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Postman-Token", "2b5c61fd-b551-4650-5797-9d8c0c97783e");
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/brands \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/brands?order_by=visibility,asc|position,desc&limit=4",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/brands"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")
              req.Header.Add("Postman-Token", "e9f092c9-1eb6-d5b7-7f66-4187c013f399")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/brands",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/brands")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();
            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation
            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/brands")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })
            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>
            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/brands"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Python'
          source: |
            import requests
            url = "http://api.facestore.local:90/v1/brands"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }
            response = requests.request("GET", url, headers=headers)
            print(response.text)
    post:
      tags:
        - Brands
      description: Creates a new brand in the store.
      operationId: addBrands
      produces:
        - application/json
      parameters:
        - name: brand
          in: body
          description: Brand to add to the store
          required: true
          schema:
            $ref: '#/definitions/Brand'
      responses:
        201:
          description: Brand response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Brand'
        422:
          $ref: '#/responses/422'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/brands");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n    \"active\": 1,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n                {\n                    \"locale\": \"en_US\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"pt_PT\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"es_ES\",\n                    \"name\": \"LALALA\",\n                    \"description\": \"asdasd\"\n                }\n            ]\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
            http://api.facestore.local:90/v1/brands \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json' \
            -d '{
              "active": 1,
              "position": 1,
              "visibility": [
                "facebook",
                "mobile"
              ],
              "i18n": [
                          {
                              "locale": "en_US",
                              "name": "LALALA"
                          },
                          {
                              "locale": "pt_PT",
                              "name": "LALALA"
                          },
                          {
                              "locale": "es_ES",
                              "name": "LALALA",
                              "description": "asdasd"
                          }
                      ]
                }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/brands",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\n    \"active\": true,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n                {\n                    \"locale\": \"en_US\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"pt_PT\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"es_ES\",\n                    \"name\": \"LALALA\",\n                    \"description\": \"asdasd\"\n                }\n            ]\n}\n",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main
            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {
              url := "http://api.facestore.local:90/v1/brands"

              payload := strings.NewReader("{\n    \"active\": 1,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n                {\n                    \"locale\": \"en_US\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"pt_PT\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"es_ES\",\n                    \"name\": \"LALALA\",\n                    \"description\": \"asdasd\"\n                }\n            ]\n}")

              req, _ := http.NewRequest("POST", url, payload)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))
            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/brands",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n    \"active\": 1,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n                {\n                    \"locale\": \"en_US\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"pt_PT\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"es_ES\",\n                    \"name\": \"LALALA\",\n                    \"description\": \"asdasd\"\n                }\n            ]\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n    \"active\": 1,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n                {\n                    \"locale\": \"en_US\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"pt_PT\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"es_ES\",\n                    \"name\": \"LALALA\",\n                    \"description\": \"asdasd\"\n                }\n            ]\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/brands")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation
            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              "active": 1,
              "position": 1,
              "visibility": ["facebook", "mobile"],
              "i18n": [
                [
                  "locale": "en_US",
                  "name": "LALALA"
                ],
                [
                  "locale": "pt_PT",
                  "name": "LALALA"
                ],
                [
                  "locale": "es_ES",
                  "name": "LALALA",
                  "description": "asdasd"
                ]
              ]
            ] as [String : Any]

            let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/brands")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };
            NSDictionary *parameters = @{ @"active": @1,
                                          @"position": @1,
                                          @"visibility": @[ @"facebook", @"mobile" ],
                                          @"i18n": @[ @{ @"locale": @"en_US", @"name": @"LALALA" }, @{ @"locale": @"pt_PT", @"name": @"LALALA" }, @{ @"locale": @"es_ES", @"name": @"LALALA", @"description": @"asdasd" } ] };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/brands"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Python'
          source: |
            import requests
            url = "http://api.facestore.local:90/v1/brands"

            payload = "{\n    \"active\": 1,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n                {\n                    \"locale\": \"en_US\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"pt_PT\",\n                    \"name\": \"LALALA\"\n                },\n                {\n                    \"locale\": \"es_ES\",\n                    \"name\": \"LALALA\",\n                    \"description\": \"asdasd\"\n                }\n            ]\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)
            print(response.text)
  /brands/{id}/:
    get:
      tags:
        - Brands
      description: |
        Returns a brand based on a single ID

        ### Includes
        You can give the following values on includea parameter: `routes, products,`
      operationId: getBrandById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - name: id
          in: path
          description: ID of brand to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Brand response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Brand'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/brands/1");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/brands/1 \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/brands/1",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main
            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/brands/1"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/brands/1",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/brands/1")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/brands/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/brands/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Python'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/brands/1"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    delete:
      tags:
        - Brands
      description: Deletes a single brand based on the ID supplied
      operationId: deleteBrandById
      parameters:
        - name: id
          in: path
          description: ID of brand to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Brand has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/brands/1");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X DELETE \
            http://api.facestore.local:90/v1/brands/1 \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/brands/6",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/brands/1"

              req, _ := http.NewRequest("DELETE", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/brands/1",
              "method": "DELETE",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/brands/1")
              .delete(null)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/brands/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/brands/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Python'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/brands/1"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
    put:
      tags:
        - Brands
      description: Update a single brand based on the ID supplied
      operationId: updateBrandsById
      parameters:
        - name: id
          in: path
          description: ID of brand to update
          required: true
          type: integer
          format: int64
        - name: brand
          in: body
          description: Brand to update in store
          required: true
          schema:
            type: object
            items:
              $ref: '#/definitions/Brand'
      responses:
        200:
          description: Brand has been updated
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/brands/1");
            var request = new RestRequest(Method.PATCH);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n\t\"position\": 2,\n\t\"active\": false,\n\t\"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"LALALA\"\n        }\n    ]\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X PATCH \
              http://api.facestore.local:90/v1/brands/1 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
              "position": 2,
              "active": false,
              "i18n": [
                    {
                        "locale": "en_US",
                        "name": "LALALA"
                    },
                    {
                        "locale": "pt_PT",
                        "name": "LALALA"
                    },
                    {
                        "locale": "es_ES",
                        "name": "LALALA"
                    }
                ]
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/brands/1",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PATCH",
              CURLOPT_POSTFIELDS => "{\n  \"position\": 2,\n  \"active\": false,\n  \"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"LALALA\"\n        }\n    ]\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/brands/1"

              payload := strings.NewReader("{\n\t\"position\": 2,\n\t\"active\": false,\n\t\"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"LALALA\"\n        }\n    ]\n}")

              req, _ := http.NewRequest("PATCH", url, payload)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/brands/1",
              "method": "PATCH",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n\t\"position\": 2,\n\t\"active\": false,\n\t\"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"LALALA\"\n        }\n    ]\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n\t\"position\": 2,\n\t\"active\": false,\n\t\"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"LALALA\"\n        }\n    ]\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/brands/1")
              .patch(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              "position": 2,
              "active": "",
              "i18n": [
                [
                  "locale": "en_US",
                  "name": "LALALA"
                ],
                [
                  "locale": "pt_PT",
                  "name": "LALALA"
                ],
                [
                  "locale": "es_ES",
                  "name": "LALALA"
                ]
              ]
            ] as [String : Any]

            let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/brands/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "PATCH"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };
            NSDictionary *parameters = @{ @"position": @2,
                                          @"active": @"",
                                          @"i18n": @[ @{ @"locale": @"en_US", @"name": @"LALALA" }, @{ @"locale": @"pt_PT", @"name": @"LALALA" }, @{ @"locale": @"es_ES", @"name": @"LALALA" } ] };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/brands/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PATCH"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Python'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/brands/1"

            payload = "{\n\t\"position\": 2,\n\t\"active\": false,\n\t\"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"LALALA\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"LALALA\"\n        }\n    ]\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("PATCH", url, data=payload, headers=headers)

            print(response.text)
  /brands/{id}/uploads/:
    post:
      tags:
        - Brands
      summary: Upload de images for brand
      operationId: uploadImages
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of brand to update
          required: true
          type: integer
          format: int64
        - name: image_small
          in: formData
          description: Small image for brand
          type: file
        - name: image_large
          in: formData
          description: Large image for brand
          type: file
      responses:
        200:
          description: The images has been uploaded
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/brands/1/uploads");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddHeader("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW");
            request.AddParameter("multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW", "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_small\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_large\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
            http://api.facestore.local:90/v1/brands/1/uploads \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json' \
            -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW' \
            -F image_small=undefined \
            -F image_large=undefined

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/brands/123123/uploads",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_small\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_large\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json",
                "content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/brands/1/uploads"

              payload := strings.NewReader("------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_small\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_large\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--")

              req, _ := http.NewRequest("POST", url, payload)

              req.Header.Add("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW")
              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var form = new FormData();
            form.append("image_small", "");
            form.append("image_large", "");

            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/brands/1/uploads",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "contentType": false,
              "mimeType": "multipart/form-data",
              "data": form
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW");
            RequestBody body = RequestBody.create(mediaType, "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_small\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_large\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/brands/1/uploads")
              .post(body)
              .addHeader("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW")
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "content-type": "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              [
                "name": "image_small",
                "fileName": ""
              ],
              [
                "name": "image_large",
                "fileName": ""
              ]
            ]

            let boundary = "----WebKitFormBoundary7MA4YWxkTrZu0gW"

            var body = ""
            var error: NSError? = nil
            for param in parameters {
              let paramName = param["name"]!
              body += "--\(boundary)\r\n"
              body += "Content-Disposition:form-data; name=\"\(paramName)\""
              if let filename = param["fileName"] {
                let contentType = param["content-type"]!
                let fileContent = String(contentsOfFile: filename, encoding: String.Encoding.utf8)
                if (error != nil) {
                  print(error)
                }
                body += "; filename=\"\(filename)\"\r\n"
                body += "Content-Type: \(contentType)\r\n\r\n"
                body += fileContent
              } else if let paramValue = param["value"] {
                body += "\r\n\r\n\(paramValue)"
              }
            }

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/brands/1/uploads")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"content-type": @"multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
                                       @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };
            NSArray *parameters = @[ @{ @"name": @"image_small", @"fileName": @"" },
                                     @{ @"name": @"image_large", @"fileName": @"" } ];
            NSString *boundary = @"----WebKitFormBoundary7MA4YWxkTrZu0gW";

            NSError *error;
            NSMutableString *body = [NSMutableString string];
            for (NSDictionary *param in parameters) {
                [body appendFormat:@"--%@\r\n", boundary];
                if (param[@"fileName"]) {
                    [body appendFormat:@"Content-Disposition:form-data; name=\"%@\"; filename=\"%@\"\r\n", param[@"name"], param[@"fileName"]];
                    [body appendFormat:@"Content-Type: %@\r\n\r\n", param[@"contentType"]];
                    [body appendFormat:@"%@", [NSString stringWithContentsOfFile:param[@"fileName"] encoding:NSUTF8StringEncoding error:&error]];
                    if (error) {
                        NSLog(@"%@", error);
                    }
                } else {
                    [body appendFormat:@"Content-Disposition:form-data; name=\"%@\"\r\n\r\n", param[@"name"]];
                    [body appendFormat:@"%@", param[@"value"]];
                }
            }
            [body appendFormat:@"\r\n--%@--\r\n", boundary];
            NSData *postData = [body dataUsingEncoding:NSUTF8StringEncoding];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/brands/1/uploads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Python'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/brands/1/uploads"

            payload = "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_small\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_large\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--"
            headers = {
                'content-type': "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)

  /categories:
    get:
      tags:
        - Categories
      description: |
        Returns all categories from the system that the user has access to

        ### Includes
        You can give the following values on includes parameter: `routes, products, children, parents`
      operationId: getCategories
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/OrderByParam'
      responses:
        200:
          description: Category response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Category'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/categories");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/categories \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/categories?includes=children",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/categories"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/categories",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/categories")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/categories")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/categories"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/categories"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    post:
      tags:
        - Categories
      description: Creates a new category in the store.
      operationId: addCategories
      produces:
        - application/json
      parameters:
        - name: category
          in: body
          description: Category to add to the store
          required: true
          schema:
            $ref: '#/definitions/Category'
      responses:
        201:
          description: Category response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Category'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/categories");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n    \"active\": true,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\"\n    ],\n    \"i18n\": [\n        {\n        \t\"locale\": \"pt_pt\",\n            \"name\": \"Foobar category\",\n            \"description\": \"Foobar category description\"\n        },\n        {\n        \t\"locale\": \"es_ES\",\n            \"name\": \"Foobar category ES\",\n            \"description\": \"Foobar category description ES\"\n        },\n        {\n        \t\"locale\": \"en_US\",\n            \"name\": \"Foobar category EN_US\",\n            \"description\": \"Foobar category description US\"\n        }\n    ]\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/categories \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
                "active": true,
                "position": 1,
                "visibility": [
                  "facebook"
                ],
                "i18n": [
                    {
                      "locale": "pt_pt",
                        "name": "Foobar category",
                        "description": "Foobar category description"
                    },
                    {
                      "locale": "es_ES",
                        "name": "Foobar category ES",
                        "description": "Foobar category description ES"
                    },
                    {
                      "locale": "en_US",
                        "name": "Foobar category EN_US",
                        "description": "Foobar category description US"
                    }
                ]
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/categories",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\n    \"active\": true,\n    \"id_parent\": 1,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\"\n    ],\n    \"i18n\": [\n        {\n          \"locale\": \"pt_pt\",\n            \"name\": \"Foobar category\",\n            \"description\": \"Foobar category description\"\n        },\n        {\n          \"locale\": \"es_ES\",\n            \"name\": \"Foobar category ES\",\n            \"description\": \"Foobar category description ES\"\n        },\n        {\n          \"locale\": \"en_US\",\n            \"name\": \"Foobar category EN_US\",\n            \"description\": \"Foobar category description US\"\n        }\n    ]\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/categories"

              payload := strings.NewReader("{\n    \"active\": true,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\"\n    ],\n    \"i18n\": [\n        {\n        \t\"locale\": \"pt_pt\",\n            \"name\": \"Foobar category\",\n            \"description\": \"Foobar category description\"\n        },\n        {\n        \t\"locale\": \"es_ES\",\n            \"name\": \"Foobar category ES\",\n            \"description\": \"Foobar category description ES\"\n        },\n        {\n        \t\"locale\": \"en_US\",\n            \"name\": \"Foobar category EN_US\",\n            \"description\": \"Foobar category description US\"\n        }\n    ]\n}")

              req, _ := http.NewRequest("POST", url, payload)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/categories",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n    \"active\": true,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\"\n    ],\n    \"i18n\": [\n        {\n        \t\"locale\": \"pt_pt\",\n            \"name\": \"Foobar category\",\n            \"description\": \"Foobar category description\"\n        },\n        {\n        \t\"locale\": \"es_ES\",\n            \"name\": \"Foobar category ES\",\n            \"description\": \"Foobar category description ES\"\n        },\n        {\n        \t\"locale\": \"en_US\",\n            \"name\": \"Foobar category EN_US\",\n            \"description\": \"Foobar category description US\"\n        }\n    ]\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OOkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n    \"active\": true,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\"\n    ],\n    \"i18n\": [\n        {\n        \t\"locale\": \"pt_pt\",\n            \"name\": \"Foobar category\",\n            \"description\": \"Foobar category description\"\n        },\n        {\n        \t\"locale\": \"es_ES\",\n            \"name\": \"Foobar category ES\",\n            \"description\": \"Foobar category description ES\"\n        },\n        {\n        \t\"locale\": \"en_US\",\n            \"name\": \"Foobar category EN_US\",\n            \"description\": \"Foobar category description US\"\n        }\n    ]\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/categories")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/categories"

            payload = "{\n    \"active\": true,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\"\n    ],\n    \"i18n\": [\n        {\n        \t\"locale\": \"pt_pt\",\n            \"name\": \"Foobar category\",\n            \"description\": \"Foobar category description\"\n        },\n        {\n        \t\"locale\": \"es_ES\",\n            \"name\": \"Foobar category ES\",\n            \"description\": \"Foobar category description ES\"\n        },\n        {\n        \t\"locale\": \"en_US\",\n            \"name\": \"Foobar category EN_US\",\n            \"description\": \"Foobar category description US\"\n        }\n    ]\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)

        - lang: 'Objective-C'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n    \"active\": true,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\"\n    ],\n    \"i18n\": [\n        {\n        \t\"locale\": \"pt_pt\",\n            \"name\": \"Foobar category\",\n            \"description\": \"Foobar category description\"\n        },\n        {\n        \t\"locale\": \"es_ES\",\n            \"name\": \"Foobar category ES\",\n            \"description\": \"Foobar category description ES\"\n        },\n        {\n        \t\"locale\": \"en_US\",\n            \"name\": \"Foobar category EN_US\",\n            \"description\": \"Foobar category description US\"\n        }\n    ]\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/categories")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/categories"

            payload = "{\n    \"active\": true,\n    \"position\": 1,\n    \"visibility\": [\n      \"facebook\"\n    ],\n    \"i18n\": [\n        {\n        \t\"locale\": \"pt_pt\",\n            \"name\": \"Foobar category\",\n            \"description\": \"Foobar category description\"\n        },\n        {\n        \t\"locale\": \"es_ES\",\n            \"name\": \"Foobar category ES\",\n            \"description\": \"Foobar category description ES\"\n        },\n        {\n        \t\"locale\": \"en_US\",\n            \"name\": \"Foobar category EN_US\",\n            \"description\": \"Foobar category description US\"\n        }\n    ]\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
  /categories/{id}/:
    get:
      tags:
        - Categories
      description: |
        Returns a category based on a single ID

        ### Includes
        You can give the following values on includes parameter: `routes, products, children, parents`
      operationId: getCategoryById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - name: id
          in: path
          description: ID of category to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Category response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Category'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/categories/1");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/categories/1 \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/categories/4?includes=parents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/categories/1"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/categories/1",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/categories/1")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/categories/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/categories/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/categories/1"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    delete:
      tags:
        - Categories
      description: |
        deletes a single category based on the ID supplied \
        cannot delete a category if it contains products
      operationId: deleteCategoryById
      parameters:
        - name: id
          in: path
          description: ID of category to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Category has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
        423:
          description: Locked
          schema:
            type: object
            items:
              $ref: '#/definitions/Locked'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/categories/1");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X DELETE \
            http://api.facestore.local:90/v1/categories/1 \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/categories/5",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/categories/1"

              req, _ := http.NewRequest("DELETE", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/categories/1",
              "method": "DELETE",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/categories/1")
              .delete(null)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/categories/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/categories/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/categories/1"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
    put:
      tags:
        - Categories
      description: update a single category based on the ID supplied
      operationId: updateCategoryById
      parameters:
        - name: id
          in: path
          description: ID of category to update
          required: true
          type: integer
          format: int64
        - name: category
          in: body
          description: Category to update in store
          required: true
          schema:
            type: object
            items:
              $ref: '#/definitions/Category'
      responses:
        200:
          description: Category has been updated
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/categories/1");
            var request = new RestRequest(Method.PUT);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n    \"active\": 1,\n    \"position\": 5,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"ree\",\n            \"description\": \"description\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"Brand\",\n            \"description\": \"Description brand\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"ree\",\n            \"description\": \"Es description description\"\n        }\n    ]\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X PUT \
              http://api.facestore.local:90/v1/categories/1 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
                "active": 1,
                "position": 5,
                "visibility": [
                  "facebook",
                  "mobile"
                ],
                "i18n": [
                    {
                        "locale": "en_US",
                        "name": "ree",
                        "description": "description"
                    },
                    {
                        "locale": "pt_PT",
                        "name": "Brand",
                        "description": "Description brand"
                    },
                    {
                        "locale": "es_ES",
                        "name": "ree",
                        "description": "Es description description"
                    }
                ]
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/categories/8",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\n    \"active\": 1,\n    \"id_parent\": 2,\n    \"position\": 5,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"ree\",\n            \"description\": \"description\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"Brand\",\n            \"description\": \"Description brand\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"ree\",\n            \"description\": \"Es description description\"\n        }\n    ]\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/categories/1"

              payload := strings.NewReader("{\n    \"active\": 1,\n    \"position\": 5,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"ree\",\n            \"description\": \"description\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"Brand\",\n            \"description\": \"Description brand\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"ree\",\n            \"description\": \"Es description description\"\n        }\n    ]\n}")

              req, _ := http.NewRequest("PUT", url, payload)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/categories/1",
              "method": "PUT",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n    \"active\": 1,\n    \"position\": 5,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"ree\",\n            \"description\": \"description\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"Brand\",\n            \"description\": \"Description brand\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"ree\",\n            \"description\": \"Es description description\"\n        }\n    ]\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n    \"active\": 1,\n    \"position\": 5,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"ree\",\n            \"description\": \"description\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"Brand\",\n            \"description\": \"Description brand\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"ree\",\n            \"description\": \"Es description description\"\n        }\n    ]\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/categories/1")
              .put(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              "active": 1,
              "position": 5,
              "visibility": ["facebook", "mobile"],
              "i18n": [
                [
                  "locale": "en_US",
                  "name": "ree",
                  "description": "description"
                ],
                [
                  "locale": "pt_PT",
                  "name": "Brand",
                  "description": "Description brand"
                ],
                [
                  "locale": "es_ES",
                  "name": "ree",
                  "description": "Es description description"
                ]
              ]
            ] as [String : Any]

            let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/categories/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "PUT"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };
            NSDictionary *parameters = @{ @"active": @1,
                                          @"position": @5,
                                          @"visibility": @[ @"facebook", @"mobile" ],
                                          @"i18n": @[ @{ @"locale": @"en_US", @"name": @"ree", @"description": @"description" }, @{ @"locale": @"pt_PT", @"name": @"Brand", @"description": @"Description brand" }, @{ @"locale": @"es_ES", @"name": @"ree", @"description": @"Es description description" } ] };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/categories/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PUT"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/categories/1"

            payload = "{\n    \"active\": 1,\n    \"position\": 5,\n    \"visibility\": [\n      \"facebook\",\n      \"mobile\"\n    ],\n    \"i18n\": [\n        {\n            \"locale\": \"en_US\",\n            \"name\": \"ree\",\n            \"description\": \"description\"\n        },\n        {\n            \"locale\": \"pt_PT\",\n            \"name\": \"Brand\",\n            \"description\": \"Description brand\"\n        },\n        {\n            \"locale\": \"es_ES\",\n            \"name\": \"ree\",\n            \"description\": \"Es description description\"\n        }\n    ]\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("PUT", url, data=payload, headers=headers)

            print(response.text)
  /categories/{id}/uploads/:
    post:
      tags:
        - Categories
      summary: Upload de images for category
      operationId: uploadImages
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of category to update
          required: true
          type: integer
          format: int64
        - name: image_small
          in: formData
          description: Small image for category
          type: file
        - name: image_large
          in: formData
          description: Large image for category
          type: file
      responses:
        200:
          description: The images has been uploaded
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/categories/1/uploads");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
            http://api.facestore.local:90/v1/categories/1/uploads \
            -H 'Cache-Control: no-cache'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/categories/",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_small\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image_larger\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"i18n[pt_PT][name]\"\r\n\r\nCategoria\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"i18n[pt_PT][description]\"\r\n\r\nDescription category\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\nPATCH\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/categories/1/uploads"

              req, _ := http.NewRequest("POST", url, nil)

              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/categories/1/uploads",
              "method": "POST",
              "headers": {
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/categories/1/uploads")
              .post(null)
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = ["Cache-Control": "no-cache"]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/categories/1/uploads")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "POST"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/categories/1/uploads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/categories/1/uploads"

            headers = {'Cache-Control': 'no-cache'}

            response = requests.request("POST", url, headers=headers)

            print(response.text)

  /attributes:
    get:
      tags:
        - Products Attributes
      description: |
        Returns all attributes of products from the system that the user has access to

        ### Includes
        You can give the following values on includes parameter: `options`
      operationId: getProductsAttributes
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/OrderByParam'
      responses:
        200:
          description: Attribute response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Attribute'
              meta:
                $ref: '#/definitions/MetaPartialResponse'
        204:
          $ref: '#/responses/204'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/attributes/?include=options");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            'http://api.facestore.local:90/v1/attributes/?include=options' \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/attributes/?include=options"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/attributes/?include=options",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/attributes/?include=options")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/attributes/?include=options")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/attributes/?include=options"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/attributes/"

            querystring = {"include":"options"}

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
    post:
      tags:
        - Products Attributes
      description: Creates a new attribute of products in the store.
      operationId: addProductsAttributes
      produces:
        - application/json
      parameters:
        - name: attribute
          in: body
          description: Attribute to add to the store
          required: true
          schema:
            $ref: '#/definitions/Attribute'
      responses:
        201:
          description: Attribute response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Attribute'
        422:
          $ref: '#/responses/422'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/attributes");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n  \"is_searchable\": true,\n  \"active\": true,\n  \"i18n\": {\n    \"pt_PT\": {\n    \t\"name\": \"Tamanho\"\n    },\n\t\"en_US\": {\n\t\t\"name\": \"Size\"\n\t},\n\t\"es_ES\": {\n\t\t\"name\": \"Tamaño\"\n\t}\n\t},\n  \"options\": [\n      {\n        \"position\": 2,\n        \"image\": \"image\",\n        \"aux_code\": \"P\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Pequeno\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Small\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Pequeño\"\n\t\t\t}\n        }\n      },\n      {\n        \"aux_code\": \"M\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Medio\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Medium\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Medio\"\n\t\t\t}\n        }\n      },\n      {\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Grande\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Big\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t}\n        }\n      }\n    ]\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/attributes \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
              "is_searchable": true,
              "active": true,
              "i18n": {
                "pt_PT": {
                  "name": "Tamanho"
                },
              "en_US": {
                "name": "Size"
              },
              "es_ES": {
                "name": "Tamaño"
              }
              },
              "options": [
                  {
                    "position": 2,
                    "image": "image",
                    "aux_code": "P",
                    "i18n": {
                  "pt_PT": {
                      "name": "Pequeno"
                  },
                  "en_US": {
                    "name": "Small"
                  },
                  "es_ES": {
                    "name": "Pequeño"
                  }
                    }
                  },
                  {
                    "aux_code": "M",
                    "i18n": {
                  "pt_PT": {
                      "name": "Medio"
                  },
                  "en_US": {
                    "name": "Medium"
                  },
                  "es_ES": {
                    "name": "Medio"
                  }
                    }
                  },
                  {
                    "i18n": {
                  "pt_PT": {
                      "name": "Grande"
                  },
                  "en_US": {
                    "name": "Big"
                  },
                  "es_ES": {
                    "name": "Grande"
                  }
                    }
                  }
                ]
            }'

        - lang: 'PHP'
          source: |

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/attributes"

              payload := strings.NewReader("{\n  \"is_searchable\": true,\n  \"active\": true,\n  \"i18n\": {\n    \"pt_PT\": {\n    \t\"name\": \"Tamanho\"\n    },\n\t\"en_US\": {\n\t\t\"name\": \"Size\"\n\t},\n\t\"es_ES\": {\n\t\t\"name\": \"Tamaño\"\n\t}\n\t},\n  \"options\": [\n      {\n        \"position\": 2,\n        \"image\": \"image\",\n        \"aux_code\": \"P\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Pequeno\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Small\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Pequeño\"\n\t\t\t}\n        }\n      },\n      {\n        \"aux_code\": \"M\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Medio\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Medium\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Medio\"\n\t\t\t}\n        }\n      },\n      {\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Grande\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Big\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t}\n        }\n      }\n    ]\n}")

              req, _ := http.NewRequest("POST", url, payload)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/attributes",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n  \"is_searchable\": true,\n  \"active\": true,\n  \"i18n\": {\n    \"pt_PT\": {\n    \t\"name\": \"Tamanho\"\n    },\n\t\"en_US\": {\n\t\t\"name\": \"Size\"\n\t},\n\t\"es_ES\": {\n\t\t\"name\": \"Tamaño\"\n\t}\n\t},\n  \"options\": [\n      {\n        \"position\": 2,\n        \"image\": \"image\",\n        \"aux_code\": \"P\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Pequeno\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Small\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Pequeño\"\n\t\t\t}\n        }\n      },\n      {\n        \"aux_code\": \"M\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Medio\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Medium\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Medio\"\n\t\t\t}\n        }\n      },\n      {\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Grande\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Big\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t}\n        }\n      }\n    ]\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n  \"is_searchable\": true,\n  \"active\": true,\n  \"i18n\": {\n    \"pt_PT\": {\n    \t\"name\": \"Tamanho\"\n    },\n\t\"en_US\": {\n\t\t\"name\": \"Size\"\n\t},\n\t\"es_ES\": {\n\t\t\"name\": \"Tamaño\"\n\t}\n\t},\n  \"options\": [\n      {\n        \"position\": 2,\n        \"image\": \"image\",\n        \"aux_code\": \"P\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Pequeno\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Small\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Pequeño\"\n\t\t\t}\n        }\n      },\n      {\n        \"aux_code\": \"M\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Medio\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Medium\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Medio\"\n\t\t\t}\n        }\n      },\n      {\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Grande\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Big\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t}\n        }\n      }\n    ]\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/attributes")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |


        - lang: 'Objective-C'
          source: |


        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/attributes"

            payload = "{\n  \"is_searchable\": true,\n  \"active\": true,\n  \"i18n\": {\n    \"pt_PT\": {\n    \t\"name\": \"Tamanho\"\n    },\n\t\"en_US\": {\n\t\t\"name\": \"Size\"\n\t},\n\t\"es_ES\": {\n\t\t\"name\": \"Tamaño\"\n\t}\n\t},\n  \"options\": [\n      {\n        \"position\": 2,\n        \"image\": \"image\",\n        \"aux_code\": \"P\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Pequeno\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Small\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Pequeño\"\n\t\t\t}\n        }\n      },\n      {\n        \"aux_code\": \"M\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Medio\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Medium\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Medio\"\n\t\t\t}\n        }\n      },\n      {\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t    \"name\": \"Grande\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Big\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t}\n        }\n      }\n    ]\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
  /attributes/{id}/:
    get:
      tags:
        - Products Attributes
      description: |
        Returns a attribute of products based on a single ID

        ### Includes
        You can give the following values on includes parameter: `options`
      operationId: getProductAttributeById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - name: id
          in: path
          description: ID of attribute to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Attribute response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Attribute'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/attributes/1?include=options");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            'http://api.facestore.local:90/v1/attributes/1?include=options' \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/attributes/1?include=options"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/attributes/1?include=options",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/attributes/1?include=options")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/attributes/1?include=options")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()


        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/attributes/1?include=options"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];


        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/attributes/1"

            querystring = {"include":"options"}

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
    delete:
      tags:
        - Products Attributes
      description: deletes a single attribute of products based on the ID supplied
      operationId: deleteProductAttributeById
      parameters:
        - name: id
          in: path
          description: ID of attribute to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Product Attribute has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/attributes/1");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("APIToken", "854ebdbae803e0edd4f8690cf4c7528c8ec96780");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X DELETE \
            http://api.facestore.local:90/v1/attributes/1 \
            -H 'APIToken: 854ebdbae803e0edd4f8690cf4c7528c8ec96780' \
            -H 'Cache-Control: no-cache'

        - lang: 'PHP'
          source: |

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/attributes/1"

              req, _ := http.NewRequest("DELETE", url, nil)

              req.Header.Add("APIToken", "854ebdbae803e0edd4f8690cf4c7528c8ec96780")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/attributes/1",
              "method": "DELETE",
              "headers": {
                "APIToken": "854ebdbae803e0edd4f8690cf4c7528c8ec96780",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/attributes/1")
              .delete(null)
              .addHeader("APIToken", "854ebdbae803e0edd4f8690cf4c7528c8ec96780")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "854ebdbae803e0edd4f8690cf4c7528c8ec96780",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/attributes/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()


        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"854ebdbae803e0edd4f8690cf4c7528c8ec96780",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/attributes/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];


        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/attributes/1"

            headers = {
                'APIToken': "854ebdbae803e0edd4f8690cf4c7528c8ec96780",
                'Cache-Control': "no-cache"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
    put:
      tags:
        - Products Attributes
      description: update a single attribute of products based on the ID supplied
      operationId: updateProductAttributeById
      parameters:
        - name: id
          in: path
          description: ID of attribute to update
          required: true
          type: integer
          format: int64
        - name: product attribute
          in: body
          description: Attribute to add to the store
          required: true
          schema:
            type: object
            items:
              $ref: '#/definitions/Attribute'
      responses:
        200:
          description: Attribute has been updated
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/attributes/45");
            var request = new RestRequest(Method.PUT);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n  \"is_searchable\": false,\n  \"active\": false,\n  \"i18n\": {\n    \"pt_PT\": {\n      \"name\": \"Tamanho\"\n    },\n    \"en_US\": {\n      \"name\": \"Size\"\n    },\n    \"es_ES\": {\n      \"name\": \"Tamaño\"\n    }\n  },\n  \"options\": [\n      {\n        \"position\": 1,\n        \"aux_code\": \"P\",\n        \"image\": \"blob here[Not implemented yet]\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t\t\"name\": \"Pequeno\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Small\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Pequeño\"\n\t\t\t}\n        }\n      },\n      {\n        \"position\": 2,\n        \"aux_code\": \"M\",\n        \"image\": \"\",\n        \"i18n\": {\n          \"data\": [\n            {\n              \"pt_PT\": {\n                \"name\": \"Médio\"\n              }\n            },\n            {\n              \"en_EN\": {\n                \"name\": \"Medium\"\n              }\n            },\n            {\n              \"es_ES\": {\n                \"name\": \"Medio\"\n              }\n            }\n          ]\n        }\n      },\n      {\n        \"position\": 1,\n        \"aux_code\": \"\",\n        \"image\": \"\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t},\n\t\t\t\"en_EN\": {\n\t\t\t\t\"name\": \"Larger\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t}\n    \t}\n      }\n    ]\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X PUT \
              http://api.facestore.local:90/v1/attributes/45 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
              "is_searchable": false,
              "active": false,
              "i18n": {
                "pt_PT": {
                  "name": "Tamanho"
                },
                "en_US": {
                  "name": "Size"
                },
                "es_ES": {
                  "name": "Tamaño"
                }
              },
              "options": [
                  {
                    "position": 1,
                    "aux_code": "P",
                    "image": "blob here[Not implemented yet]",
                    "i18n": {
                  "pt_PT": {
                    "name": "Pequeno"
                  },
                  "en_US": {
                    "name": "Small"
                  },
                  "es_ES": {
                    "name": "Pequeño"
                  }
                    }
                  },
                  {
                    "position": 2,
                    "aux_code": "M",
                    "image": "",
                    "i18n": {
                      "data": [
                        {
                          "pt_PT": {
                            "name": "Médio"
                          }
                        },
                        {
                          "en_EN": {
                            "name": "Medium"
                          }
                        },
                        {
                          "es_ES": {
                            "name": "Medio"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "position": 1,
                    "aux_code": "",
                    "image": "",
                    "i18n": {
                  "pt_PT": {
                    "name": "Grande"
                  },
                  "en_EN": {
                    "name": "Larger"
                  },
                  "es_ES": {
                    "name": "Grande"
                  }
                  }
                  }
                ]
            }'

        - lang: 'PHP'
          source: |

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/attributes/45"

              payload := strings.NewReader("{\n  \"is_searchable\": false,\n  \"active\": false,\n  \"i18n\": {\n    \"pt_PT\": {\n      \"name\": \"Tamanho\"\n    },\n    \"en_US\": {\n      \"name\": \"Size\"\n    },\n    \"es_ES\": {\n      \"name\": \"Tamaño\"\n    }\n  },\n  \"options\": [\n      {\n        \"position\": 1,\n        \"aux_code\": \"P\",\n        \"image\": \"blob here[Not implemented yet]\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t\t\"name\": \"Pequeno\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Small\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Pequeño\"\n\t\t\t}\n        }\n      },\n      {\n        \"position\": 2,\n        \"aux_code\": \"M\",\n        \"image\": \"\",\n        \"i18n\": {\n          \"data\": [\n            {\n              \"pt_PT\": {\n                \"name\": \"Médio\"\n              }\n            },\n            {\n              \"en_EN\": {\n                \"name\": \"Medium\"\n              }\n            },\n            {\n              \"es_ES\": {\n                \"name\": \"Medio\"\n              }\n            }\n          ]\n        }\n      },\n      {\n        \"position\": 1,\n        \"aux_code\": \"\",\n        \"image\": \"\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t},\n\t\t\t\"en_EN\": {\n\t\t\t\t\"name\": \"Larger\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t}\n    \t}\n      }\n    ]\n}")

              req, _ := http.NewRequest("PUT", url, payload)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/attributes/45",
              "method": "PUT",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n  \"is_searchable\": false,\n  \"active\": false,\n  \"i18n\": {\n    \"pt_PT\": {\n      \"name\": \"Tamanho\"\n    },\n    \"en_US\": {\n      \"name\": \"Size\"\n    },\n    \"es_ES\": {\n      \"name\": \"Tamaño\"\n    }\n  },\n  \"options\": [\n      {\n        \"position\": 1,\n        \"aux_code\": \"P\",\n        \"image\": \"blob here[Not implemented yet]\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t\t\"name\": \"Pequeno\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Small\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Pequeño\"\n\t\t\t}\n        }\n      },\n      {\n        \"position\": 2,\n        \"aux_code\": \"M\",\n        \"image\": \"\",\n        \"i18n\": {\n          \"data\": [\n            {\n              \"pt_PT\": {\n                \"name\": \"Médio\"\n              }\n            },\n            {\n              \"en_EN\": {\n                \"name\": \"Medium\"\n              }\n            },\n            {\n              \"es_ES\": {\n                \"name\": \"Medio\"\n              }\n            }\n          ]\n        }\n      },\n      {\n        \"position\": 1,\n        \"aux_code\": \"\",\n        \"image\": \"\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t},\n\t\t\t\"en_EN\": {\n\t\t\t\t\"name\": \"Larger\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t}\n    \t}\n      }\n    ]\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n  \"is_searchable\": false,\n  \"active\": false,\n  \"i18n\": {\n    \"pt_PT\": {\n      \"name\": \"Tamanho\"\n    },\n    \"en_US\": {\n      \"name\": \"Size\"\n    },\n    \"es_ES\": {\n      \"name\": \"Tamaño\"\n    }\n  },\n  \"options\": [\n      {\n        \"position\": 1,\n        \"aux_code\": \"P\",\n        \"image\": \"blob here[Not implemented yet]\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t\t\"name\": \"Pequeno\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Small\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Pequeño\"\n\t\t\t}\n        }\n      },\n      {\n        \"position\": 2,\n        \"aux_code\": \"M\",\n        \"image\": \"\",\n        \"i18n\": {\n          \"data\": [\n            {\n              \"pt_PT\": {\n                \"name\": \"Médio\"\n              }\n            },\n            {\n              \"en_EN\": {\n                \"name\": \"Medium\"\n              }\n            },\n            {\n              \"es_ES\": {\n                \"name\": \"Medio\"\n              }\n            }\n          ]\n        }\n      },\n      {\n        \"position\": 1,\n        \"aux_code\": \"\",\n        \"image\": \"\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t},\n\t\t\t\"en_EN\": {\n\t\t\t\t\"name\": \"Larger\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t}\n    \t}\n      }\n    ]\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/attributes/45")
              .put(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              "is_searchable": "",
              "active": "",
              "i18n": [
                "pt_PT": ["name": "Tamanho"],
                "en_US": ["name": "Size"],
                "es_ES": ["name": "Tamaño"]
              ],
              "options": [
                [
                  "position": 1,
                  "aux_code": "P",
                  "image": "blob here[Not implemented yet]",
                  "i18n": [
                    "pt_PT": ["name": "Pequeno"],
                    "en_US": ["name": "Small"],
                    "es_ES": ["name": "Pequeño"]
                  ]
                ],
                [
                  "position": 2,
                  "aux_code": "M",
                  "image": "",
                  "i18n": ["data": [["pt_PT": ["name": "Médio"]], ["en_EN": ["name": "Medium"]], ["es_ES": ["name": "Medio"]]]]
                ],
                [
                  "position": 1,
                  "aux_code": "",
                  "image": "",
                  "i18n": [
                    "pt_PT": ["name": "Grande"],
                    "en_EN": ["name": "Larger"],
                    "es_ES": ["name": "Grande"]
                  ]
                ]
              ]
            ] as [String : Any]

            let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/attributes/45")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "PUT"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };
            NSDictionary *parameters = @{ @"is_searchable": @"",
                                          @"active": @"",
                                          @"i18n": @{ @"pt_PT": @{ @"name": @"Tamanho" }, @"en_US": @{ @"name": @"Size" }, @"es_ES": @{ @"name": @"Tamaño" } },
                                          @"options": @[ @{ @"position": @1, @"aux_code": @"P", @"image": @"blob here[Not implemented yet]", @"i18n": @{ @"pt_PT": @{ @"name": @"Pequeno" }, @"en_US": @{ @"name": @"Small" }, @"es_ES": @{ @"name": @"Pequeño" } } }, @{ @"position": @2, @"aux_code": @"M", @"image": @"", @"i18n": @{ @"data": @[ @{ @"pt_PT": @{ @"name": @"Médio" } }, @{ @"en_EN": @{ @"name": @"Medium" } }, @{ @"es_ES": @{ @"name": @"Medio" } } ] } }, @{ @"position": @1, @"aux_code": @"", @"image": @"", @"i18n": @{ @"pt_PT": @{ @"name": @"Grande" }, @"en_EN": @{ @"name": @"Larger" }, @"es_ES": @{ @"name": @"Grande" } } } ] };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/attributes/45"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PUT"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/attributes/45"

            payload = "{\n  \"is_searchable\": false,\n  \"active\": false,\n  \"i18n\": {\n    \"pt_PT\": {\n      \"name\": \"Tamanho\"\n    },\n    \"en_US\": {\n      \"name\": \"Size\"\n    },\n    \"es_ES\": {\n      \"name\": \"Tamaño\"\n    }\n  },\n  \"options\": [\n      {\n        \"position\": 1,\n        \"aux_code\": \"P\",\n        \"image\": \"blob here[Not implemented yet]\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t\t\"name\": \"Pequeno\"\n\t\t\t},\n\t\t\t\"en_US\": {\n\t\t\t\t\"name\": \"Small\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Pequeño\"\n\t\t\t}\n        }\n      },\n      {\n        \"position\": 2,\n        \"aux_code\": \"M\",\n        \"image\": \"\",\n        \"i18n\": {\n          \"data\": [\n            {\n              \"pt_PT\": {\n                \"name\": \"Médio\"\n              }\n            },\n            {\n              \"en_EN\": {\n                \"name\": \"Medium\"\n              }\n            },\n            {\n              \"es_ES\": {\n                \"name\": \"Medio\"\n              }\n            }\n          ]\n        }\n      },\n      {\n        \"position\": 1,\n        \"aux_code\": \"\",\n        \"image\": \"\",\n        \"i18n\": {\n\t\t\t\"pt_PT\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t},\n\t\t\t\"en_EN\": {\n\t\t\t\t\"name\": \"Larger\"\n\t\t\t},\n\t\t\t\"es_ES\": {\n\t\t\t\t\"name\": \"Grande\"\n\t\t\t}\n    \t}\n      }\n    ]\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("PUT", url, data=payload, headers=headers)

            print(response.text)

  /customers:
    get:
      tags:
        - Customers
      description: |
        Returns all customers from the system that the user has access to

        ### Includes
        You can give the following values on includes parameter: `orders, groups`
      operationId: getCustomers
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/OrderByParam'
      responses:
        200:
          description: Customers response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Customer'
        204:
          $ref: '#/responses/204'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers?page=3");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              'http://api.facestore.local:90/v1/customers?page=3' \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/customers?page=3",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/customers?page=3"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers?page=3",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers?page=3")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/customers?page=3")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/customers?page=3"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers"

            querystring = {"page":"3"}

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
    post:
      tags:
        - Customers
      description: Creates a new customer.
      operationId: addCustomer
      produces:
        - application/json
      parameters:
        - name: costumer
          in: body
          description: Customer to add
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        201:
          description: Customer response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Customer'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n    \"firstname\": \"Douglas \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326\",\n    \"email\": \"douglas.saldanha+7@facestore.pt\",\n    \"password\": \"useruser\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste\",\n    \"gender\": \"m\",\n    \"received_newsletter\": true,\n    \"addresses\": [\n      {\n        \"iso_code_district\": \"PT-01\",\n        \"type\": \"Billing\",\n        \"address\": \"Rua antonio tosin, 30\",\n        \"city\": \"Curitiba\",\n        \"zip_code\": \"81230-400\"\n      }\n    ]\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/customers \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
                "firstname": "Douglas ",
                "lastname": "Saldanha",
                "birthday": "2016-08-18",
                "vat": "505706326",
                "email": "douglas.saldanha+7@facestore.pt",
                "password": "useruser",
                "phone": "932450609",
                "company": "teste",
                "gender": "m",
                "received_newsletter": true,
                "addresses": [
                  {
                    "iso_code_district": "PT-01",
                    "type": "Billing",
                    "address": "Rua antonio tosin, 30",
                    "city": "Curitiba",
                    "zip_code": "81230-400"
                  }
                ]
            }'

        - lang: 'PHP'
          source: |
            <?php

            $request = new HttpRequest();
            $request->setUrl('http://api.facestore.local:90/v1/customers');
            $request->setMethod(HTTP_METH_POST);

            $request->setHeaders(array(
              'Cache-Control' => 'no-cache',
              'Content-Type' => 'application/json',
              'APIToken' => '083e7be2ca947a899db97d00db4f512db6a85551'
            ));

            $request->setBody('{
                "firstname": "Douglas ",
                "lastname": "Saldanha",
                "birthday": "2016-08-18",
                "vat": "505706326",
                "email": "douglas.saldanha+7@facestore.pt",
                "password": "useruser",
                "phone": "932450609",
                "company": "teste",
                "gender": "m",
                "received_newsletter": true,
                "addresses": [
                  {
                    "iso_code_district": "PT-01",
                    "type": "Billing",
                    "address": "Rua antonio tosin, 30",
                    "city": "Curitiba",
                    "zip_code": "81230-400"
                  }
                ]
            }');

            try {
              $response = $request->send();

              echo $response->getBody();
            } catch (HttpException $ex) {
              echo $ex;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/customers"

            	payload := strings.NewReader("{\n    \"firstname\": \"Douglas \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326\",\n    \"email\": \"douglas.saldanha+7@facestore.pt\",\n    \"password\": \"useruser\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste\",\n    \"gender\": \"m\",\n    \"received_newsletter\": true,\n    \"addresses\": [\n      {\n        \"iso_code_district\": \"PT-01\",\n        \"type\": \"Billing\",\n        \"address\": \"Rua antonio tosin, 30\",\n        \"city\": \"Curitiba\",\n        \"zip_code\": \"81230-400\"\n      }\n    ]\n}")

            	req, _ := http.NewRequest("POST", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n    \"firstname\": \"Douglas \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326\",\n    \"email\": \"douglas.saldanha+7@facestore.pt\",\n    \"password\": \"useruser\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste\",\n    \"gender\": \"m\",\n    \"received_newsletter\": true,\n    \"addresses\": [\n      {\n        \"iso_code_district\": \"PT-01\",\n        \"type\": \"Billing\",\n        \"address\": \"Rua antonio tosin, 30\",\n        \"city\": \"Curitiba\",\n        \"zip_code\": \"81230-400\"\n      }\n    ]\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n    \"firstname\": \"Douglas \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326\",\n    \"email\": \"douglas.saldanha+7@facestore.pt\",\n    \"password\": \"useruser\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste\",\n    \"gender\": \"m\",\n    \"received_newsletter\": true,\n    \"addresses\": [\n      {\n        \"iso_code_district\": \"PT-01\",\n        \"type\": \"Billing\",\n        \"address\": \"Rua antonio tosin, 30\",\n        \"city\": \"Curitiba\",\n        \"zip_code\": \"81230-400\"\n      }\n    ]\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
#            Postman dont show

        - lang: 'Objective-C'
          source: |
#            Postman dont show

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers"

            payload = "{\n    \"firstname\": \"Douglas \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326\",\n    \"email\": \"douglas.saldanha+7@facestore.pt\",\n    \"password\": \"useruser\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste\",\n    \"gender\": \"m\",\n    \"received_newsletter\": true,\n    \"addresses\": [\n      {\n        \"iso_code_district\": \"PT-01\",\n        \"type\": \"Billing\",\n        \"address\": \"Rua antonio tosin, 30\",\n        \"city\": \"Curitiba\",\n        \"zip_code\": \"81230-400\"\n      }\n    ]\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
  /customers/{id}/:
    get:
      tags:
        - Customers
      description: |
        Returns all customers from the system that the user has access to

        ### Includes
        You can give the following values on includes parameter: `orders, groups`
      operationId: getCustomerById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - name: id
          in: path
          description: ID of customer
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Customer response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Customer'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers/1");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/customers/1 \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/customers/6",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/customers/1"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers/1",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers/1")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/customers/6")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/customers/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers/1"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    delete:
      tags:
        - Customers
      description: deletes a single customer based on the ID supplied
      operationId: deleteCustomerById
      parameters:
        - name: id
          in: path
          description: ID of customer to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Product has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers/30");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X DELETE \
              http://api.facestore.local:90/v1/customers/30 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/customers/30",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/customers/30"

            	req, _ := http.NewRequest("DELETE", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers/30",
              "method": "DELETE",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers/30")
              .delete(null)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/customers/30")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/customers/30"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers/30"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
    put:
      tags:
        - Customers
      description: update a single customers  based on the ID supplied
      operationId: updateCustomerById
      parameters:
        - name: id
          in: path
          description: ID of customer
          required: true
          type: integer
          format: int64
        - name: customer
          in: body
          description: Customer to update
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        200:
          description: Customer Address response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/CustomerAddress'
              meta:
                type: object
                properties:
                  total:
                    type: string
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers/60");
            var request = new RestRequest(Method.PUT);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n    \"firstname\": \"Douglasaaaaaa \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326a\",\n    \"email\": \"douglas.saldanha+10@facestore.pt\",\n    \"password\": \"userusereeeee\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste33\",\n    \"gender\": \"f\",\n    \"received_newsletter\": true\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X PUT \
              http://api.facestore.local:90/v1/customers/60 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
                "firstname": "Douglasaaaaaa ",
                "lastname": "Saldanha",
                "birthday": "2016-08-18",
                "vat": "505706326a",
                "email": "douglas.saldanha+10@facestore.pt",
                "password": "userusereeeee",
                "phone": "932450609",
                "company": "teste33",
                "gender": "f",
                "received_newsletter": true
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/customers/60",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\n    \"firstname\": \"Douglasaaaaaa \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326a\",\n    \"email\": \"douglas.saldanha+10@facestore.pt\",\n    \"password\": \"userusereeeee\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste33\",\n    \"gender\": \"f\",\n    \"received_newsletter\": true\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/customers/60"

            	payload := strings.NewReader("{\n    \"firstname\": \"Douglasaaaaaa \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326a\",\n    \"email\": \"douglas.saldanha+10@facestore.pt\",\n    \"password\": \"userusereeeee\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste33\",\n    \"gender\": \"f\",\n    \"received_newsletter\": true\n}")

            	req, _ := http.NewRequest("PUT", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers/60",
              "method": "PUT",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n    \"firstname\": \"Douglasaaaaaa \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326a\",\n    \"email\": \"douglas.saldanha+10@facestore.pt\",\n    \"password\": \"userusereeeee\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste33\",\n    \"gender\": \"f\",\n    \"received_newsletter\": true\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n    \"firstname\": \"Douglasaaaaaa \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326a\",\n    \"email\": \"douglas.saldanha+10@facestore.pt\",\n    \"password\": \"userusereeeee\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste33\",\n    \"gender\": \"f\",\n    \"received_newsletter\": true\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers/60")
              .put(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
#            Postman dont show

        - lang: 'Objective-C'
          source: |
#            Postman dont show

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers/60"

            payload = "{\n    \"firstname\": \"Douglasaaaaaa \",\n    \"lastname\": \"Saldanha\",\n    \"birthday\": \"2016-08-18\",\n    \"vat\": \"505706326a\",\n    \"email\": \"douglas.saldanha+10@facestore.pt\",\n    \"password\": \"userusereeeee\",\n    \"phone\": \"932450609\",\n    \"company\": \"teste33\",\n    \"gender\": \"f\",\n    \"received_newsletter\": true\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("PUT", url, data=payload, headers=headers)

            print(response.text)
  /customers/login/:
    post:
      tags:
        - Customers Login
      description: Creates a new customer login.
      operationId: customerLogin
      produces:
        - application/json
      parameters:
        - name: login
          in: body
          description: Customer login
          required: true
          schema:
            $ref: '#/definitions/CustomerLogin'
      responses:
        201:
          description: Customer response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/CustomerLogin'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers/login");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n  \"email\": \"luciano.goncalves@facestore.pt\",\n  \"password\": \"useruser\"\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/customers/login \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
              "email": "luciano.goncalves@facestore.pt",
              "password": "useruser"
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/customers/login",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\n  \"email\": \"luciano.goncalves@facestore.pt\",\n  \"password\": \"useruser\"\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/customers/login"

            	payload := strings.NewReader("{\n  \"email\": \"luciano.goncalves@facestore.pt\",\n  \"password\": \"useruser\"\n}")

            	req, _ := http.NewRequest("POST", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers/login",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n  \"email\": \"luciano.goncalves@facestore.pt\",\n  \"password\": \"useruser\"\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n  \"email\": \"luciano.goncalves@facestore.pt\",\n  \"password\": \"useruser\"\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers/login")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              "email": "luciano.goncalves@facestore.pt",
              "password": "useruser"
            ] as [String : Any]

            let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/customers/login")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };
            NSDictionary *parameters = @{ @"email": @"luciano.goncalves@facestore.pt",
                                          @"password": @"useruser" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/customers/login"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers/login"

            payload = "{\n  \"email\": \"luciano.goncalves@facestore.pt\",\n  \"password\": \"useruser\"\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
  /customers/{id}/address/:
    get:
      tags:
        - Customers Address
      operationId: getCustomerAddresses
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of customer to get
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: customer response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/CustomerAddress'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers/4/address");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              http://api.facestore.local:90/v1/customers/4/address \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/customers/4/address",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/customers/4/address"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers/4/address",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers/4/address")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/customers/4/address")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/customers/4/address"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers/4/address"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    post:
      tags:
        - Customers Address
      description: Creates a new customers address.
      operationId: addCustomerAddress
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of customer
          required: true
          type: integer
          format: int64
        - name: address
          in: body
          description: Customers address to add
          required: true
          schema:
            $ref: '#/definitions/CustomerAddress'
      responses:
        201:
          description: Customer Address response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/CustomerAddress'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers/4/address");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 30\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-400\"\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/customers/4/address \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
            	"iso_code_district": "PT-01",
            	"type": "Billing",
            	"address": "Rua antonio tosin, 30",
            	"city": "Curitiba",
            	"zip_code": "81230-400"
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/customers/4/address",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 30\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-400\"\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/customers/4/address"

            	payload := strings.NewReader("{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 30\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-400\"\n}")

            	req, _ := http.NewRequest("POST", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers/4/address",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 30\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-400\"\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 30\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-400\"\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers/4/address")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              "iso_code_district": "PT-01",
              "type": "Billing",
              "address": "Rua antonio tosin, 30",
              "city": "Curitiba",
              "zip_code": "81230-400"
            ] as [String : Any]

            let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/customers/4/address")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };
            NSDictionary *parameters = @{ @"iso_code_district": @"PT-01",
                                          @"type": @"Billing",
                                          @"address": @"Rua antonio tosin, 30",
                                          @"city": @"Curitiba",
                                          @"zip_code": @"81230-400" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/customers/4/address"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers/4/address"

            payload = "{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 30\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-400\"\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
  /customers/{id}/address/{id_address}/:
    get:
      tags:
        - Customers Address
      description: Returns a single customers address based on the ID supplied
      operationId: getCustomersAddressByID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of customers to get
          required: true
          type: integer
          format: int64
        - name: id_address
          in: path
          description: ID of address to get
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: customer response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/CustomerAddress'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers/4/address/2");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              http://api.facestore.local:90/v1/customers/4/address/2 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/customers/4/address/2",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/customers/4/address/2"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers/4/address/2",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers/4/address/2")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/customers/4/address/2")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/customers/4/address/2"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers/4/address/2"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    delete:
      tags:
        - Customers Address
      description: deletes a single customers address based on the ID supplied
      operationId: deleteCustomerAddressById
      parameters:
        - name: id
          in: path
          description: ID of customers
          required: true
          type: integer
          format: int64
        - name: id_address
          in: path
          description: ID of address to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Customers Address has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers/4/address/4");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X DELETE \
              http://api.facestore.local:90/v1/customers/4/address/4 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/customers/4/address/4",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/customers/4/address/4"

            	req, _ := http.NewRequest("DELETE", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers/4/address/4",
              "method": "DELETE",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers/4/address/4")
              .delete(null)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/customers/4/address/4")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/customers/4/address/4"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers/4/address/4"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
    put:
      tags:
        - Customers Address
      description: update a single customers address based on the ID supplied
      operationId: updateCustomerAddressById
      parameters:
        - name: id
          in: path
          description: ID of customer
          required: true
          type: integer
          format: int64
        - name: id_address
          in: path
          description: ID of address to update
          required: true
          type: integer
          format: int64
        - name: address
          in: body
          description: Address to update
          required: true
          schema:
            $ref: '#/definitions/CustomerAddress'
      responses:
        200:
          description: Customer Address response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/CustomerAddress'
              meta:
                type: object
                properties:
                  total:
                    type: string
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/customers/4/address/39");
            var request = new RestRequest(Method.PUT);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 40\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-401\"\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X PUT \
              http://api.facestore.local:90/v1/customers/4/address/39 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
            	"iso_code_district": "PT-01",
            	"type": "Billing",
            	"address": "Rua antonio tosin, 40",
            	"city": "Curitiba",
            	"zip_code": "81230-401"
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/customers/4/address/39",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 40\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-401\"\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/customers/4/address/39"

            	payload := strings.NewReader("{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 40\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-401\"\n}")

            	req, _ := http.NewRequest("PUT", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/customers/4/address/39",
              "method": "PUT",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 40\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-401\"\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 40\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-401\"\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/customers/4/address/39")
              .put(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              "iso_code_district": "PT-01",
              "type": "Billing",
              "address": "Rua antonio tosin, 40",
              "city": "Curitiba",
              "zip_code": "81230-401"
            ] as [String : Any]

            let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/customers/4/address/39")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "PUT"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };
            NSDictionary *parameters = @{ @"iso_code_district": @"PT-01",
                                          @"type": @"Billing",
                                          @"address": @"Rua antonio tosin, 40",
                                          @"city": @"Curitiba",
                                          @"zip_code": @"81230-401" };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/customers/4/address/39"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PUT"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/customers/4/address/39"

            payload = "{\n\t\"iso_code_district\": \"PT-01\",\n\t\"type\": \"Billing\",\n\t\"address\": \"Rua antonio tosin, 40\",\n\t\"city\": \"Curitiba\",\n\t\"zip_code\": \"81230-401\"\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("PUT", url, data=payload, headers=headers)

            print(response.text)

  /orders:
    get:
      tags:
        - Orders
      description: |
        Returns all orders from the system that the user has access to

        ### Includes
        You can give the following values on includes parameter: `products, customers`
      operationId: getOrders
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/OrderByParam'
      responses:
        200:
          description: Order response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Order'
        204:
          $ref: '#/responses/204'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/orders");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/orders \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/orders",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/orders"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/orders",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/orders")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/orders")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/orders"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/orders"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
  /orders/{uid}/:
    get:
      tags:
        - Orders
      description: |
        Returns all orders from the system that the user has access to

        ### Includes
        You can give the following values on includes parameter: `products, customers`

      operationId: getOrderByUid
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - name: uid
          in: path
          description: UID of order
          required: true
          type: string
      responses:
        200:
          description: Order response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Order'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/orders/1");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/orders/1 \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/orders/138",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/orders/1"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/orders/1",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/orders/1")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/orders/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/orders/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/orders/1"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)

  /taxes:
    get:
      tags:
        - Taxes
      description: Returns all taxes from the system that the user has access to
      operationId: getTaxes
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/OrderByParam'
      produces:
        - application/json
      responses:
        200:
          description: Taxes response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Tax'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/taxes");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/taxes \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/taxes?limit=2",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/taxes"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/taxes",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/taxes")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/taxes")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/taxes"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/taxes"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    post:
      tags:
        - Taxes
      description: Creates a new tax in the store.
      operationId: addTaxes
      produces:
        - application/json
      parameters:
        - name: tax
          in: body
          description: Tax to add to the store
          required: true
          schema:
            $ref: '#/definitions/Tax'
      responses:
        201:
          description: Tax response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Tax'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/taxes/");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n  \"name\": \"Fooobar\",\n  \"is_default\": false,\n  \"value\": 95,\n  \"active\": true\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/taxes/ \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
              "name": "Fooobar",
              "is_default": false,
              "value": 95,
              "active": true
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/taxes/",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\n  \"name\": \"Fooobar\",\n  \"is_default\": false,\n  \"value\": 95,\n  \"active\": true\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/taxes/"

              payload := strings.NewReader("{\n  \"name\": \"Fooobar\",\n  \"is_default\": false,\n  \"value\": 95,\n  \"active\": true\n}")

              req, _ := http.NewRequest("POST", url, payload)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/taxes/",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n  \"name\": \"Fooobar\",\n  \"is_default\": false,\n  \"value\": 95,\n  \"active\": true\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
           OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n  \"name\": \"Fooobar\",\n  \"is_default\": false,\n  \"value\": 95,\n  \"active\": true\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/taxes/")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
#            Postman dont show

        - lang: 'Objective-C'
          source: |
#            Postman dont show

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/taxes/"

            payload = "{\n  \"name\": \"Fooobar\",\n  \"is_default\": false,\n  \"value\": 95,\n  \"active\": true\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
  /taxes/{id}/:
    get:
      tags:
        - Taxes
      description: Returns a tax based on a single ID
      operationId: getTaxById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - name: id
          in: path
          description: ID of tax to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Taxes response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Tax'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/taxes/1");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/taxes/1 \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/taxes/1",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/taxes/1"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/taxes/1",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/taxes/1")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/taxes/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/taxes/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/taxes/1"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    delete:
      tags:
        - Taxes
      description: deletes a single tax based on the ID supplied
      operationId: deleteTaxById
      parameters:
        - name: id
          in: path
          description: ID of tax to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Tax has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/taxes/1");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X DELETE \
            http://api.facestore.local:90/v1/taxes/1 \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/taxes/5",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/taxes/1"

              req, _ := http.NewRequest("DELETE", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/taxes/1",
              "method": "DELETE",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/taxes/1")
              .delete(null)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/taxes/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/taxes/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/taxes/1"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
    put:
      tags:
        - Taxes
      description: update a single tax based on the ID supplied
      operationId: updateTaxById
      parameters:
        - name: id
          in: path
          description: ID of tax to update
          required: true
          type: integer
          format: int64
        - name: tax
          in: body
          description: Tax to add to the store
          required: true
          schema:
            $ref: '#/definitions/Tax'
      responses:
        200:
          description: Taxes response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Tax'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/taxes/1");
            var request = new RestRequest(Method.PUT);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n  \"name\": \"Another one\",\n  \"is_default\": true,\n  \"value\": 72,\n  \"active\": false\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X PUT \
              http://api.facestore.local:90/v1/taxes/1 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
              "name": "Another one",
              "is_default": true,
              "value": 72,
              "active": false
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/taxes/5",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\n  \"name\": \"Another one\",\n  \"is_default\": true,\n  \"value\": 72,\n  \"active\": false\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/taxes/1"

              payload := strings.NewReader("{\n  \"name\": \"Another one\",\n  \"is_default\": true,\n  \"value\": 72,\n  \"active\": false\n}")

              req, _ := http.NewRequest("PUT", url, payload)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/taxes/1",
              "method": "PUT",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n  \"name\": \"Another one\",\n  \"is_default\": true,\n  \"value\": 72,\n  \"active\": false\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n  \"name\": \"Another one\",\n  \"is_default\": true,\n  \"value\": 72,\n  \"active\": false\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/taxes/1")
              .put(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
#            Postman dont show

        - lang: 'Objective-C'
          source: |
#            Postman dont show

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/taxes/1"

            payload = "{\n  \"name\": \"Another one\",\n  \"is_default\": true,\n  \"value\": 72,\n  \"active\": false\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("PUT", url, data=payload, headers=headers)

            print(response.text)

  /shippings:
    get:
      tags:
        - Shippings
      description: Returns all shippings from the system that the user has access to
      operationId: getShippings
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/OrderByParam'
      responses:
        200:
          description: Shippings response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Shipping'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/shippings");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/shippings \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/shippings?page=1",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/shippings"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/shippings",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/shippings")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/shippings")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/shippings"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/shippings"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    post:
      tags:
        - Shippings
      description: Creates a new shipping in the store.
      operationId: addShipping
      produces:
        - application/json
      parameters:
        - name: shipping
          in: body
          description: Shipping to add to the store
          required: true
          schema:
            $ref: '#/definitions/Shipping'
      responses:
        201:
          description: Shipping response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Shipping'
  /shippings/{id}/:
    get:
      tags:
        - Shippings
      description: Returns a shipping based on a single ID
      operationId: getShippingById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - name: id
          in: path
          description: ID of shipping to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Shipping response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Shipping'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/shippings/1");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/shippings/1 \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/shippings/1",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/shippings/1"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/shippings/1",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/shippings/1")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/shippings/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/shippings/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/shippings/1"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    delete:
      tags:
        - Shippings
      description: deletes a single shipping based on the ID supplied
      operationId: deleteShippingById
      parameters:
        - name: id
          in: path
          description: ID of shipping to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Shipping has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
    put:
      tags:
        - Shippings
      description: update a single shipping based on the ID supplied
      operationId: updateShippingById
      parameters:
        - name: id
          in: path
          description: ID of shipping to update
          required: true
          type: integer
          format: int64
        - name: tax
          in: body
          description: Shipping to update in store
          required: true
          schema:
            $ref: '#/definitions/Shipping'
      responses:
        200:
          description: Shipping response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Shipping'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'

  /payments:
    get:
      tags:
        - Payments
      description: |
        Returns all payments from the system that the user has access to
      operationId: getPayments
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/OrderByParam'
      responses:
        200:
          description: Payments response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Payment'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/payments");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/payments \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/payments?page=1",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/payments"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/payments",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/payments")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/payments")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/payments"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/payments"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
  /payments/{id}/:
    get:
      tags:
        - Payments
      description: |
        Returns all payments from the system that the user has access to
      operationId: getPaymentById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of payment
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Payment response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Payment'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/payments/1");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            http://api.facestore.local:90/v1/payments/1 \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/payments/1",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/payments/1"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/payments/1",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/payments/1")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/payments/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/payments/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/payments/1"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)

  /products:
    get:
      tags:
        - Products
      description: |
        Returns all products from the system that the user has access to

        ### Includes
        You can give the following values on includes parameter: `brands, categories, routes, stocks`
      operationId: getProducts
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/OrderByParam'
      responses:
        200:
          description: Products response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Product'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products?includes=stocks");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
            'http://api.facestore.local:90/v1/products/?includes=stocks' \
            -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
            -H 'Cache-Control: no-cache' \
            -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products?includes=stocks",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/products/?includes=stocks"

              req, _ := http.NewRequest("GET", url, nil)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/?includes=stocks",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/?includes=stocks")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/?includes=stocks")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/?includes=stocks"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/"

            querystring = {"includes":"stocks"}

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
    post:
      tags:
        - Products
      description: Creates a new product in the store.
      operationId: addProduct
      produces:
        - application/json
      parameters:
        - name: product
          in: body
          description: Product to add to the store
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        201:
          description: Product response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Product'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n  \"sku\": \"xsddqxadwcds\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \"prices\" : {\n\t    \"price\" : 200\n  \t}\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
           curl -X POST \
             http://api.facestore.local:90/v1/products \
             -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
             -H 'Cache-Control: no-cache' \
             -H 'Content-Type: application/json' \
             -d '{
             "sku": "xsddqxadwcds",
             "id_taxes_group": 1,
             "manual": "Manual text value.",
             "url_video": "",
             "is_new": true,
             "is_preferred": true,
             "in_homepage": true,
             "weight": 0.10,
             "height": 0.50,
             "width": 1.30,
             "length": 1.00,
             "shipping_amount": 0,
             "shipping_multiplies": true,
             "position": 2,
             "visibility": [
               "mobile",
               "webstore"
             ],
             "expires_at": "2055-12-2T15:18:20+00:00",
             "active": true,
             "brand": 1,
             "categories": [
               {
                 "id": 1,
                 "position": 1
               }
             ],
             "i18n": [
             	{
               	  "locale": "pt_PT",
                     "name": "Foobar field",
                     "synopsis": "Foobar Synopsis",
                     "description": "Foobar description",
                     "characteristics": "Foobar characteristics",
                     "specifications": "Foobar specifications",
                     "seo": {
                       "title": "Title of product here",
                     "keywords": "product, foobar, seo, keywords",
                     "description": "Foobar product foo bar"
                     }
             	}
             ],
             "prices" : {
           	    "price" : 200
             	}
           }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\n  \"sku\": \"xsddqxadwcds\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \"prices\" : {\n\t    \"price\" : 200\n  \t}\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products"

            	payload := strings.NewReader("{\n  \"sku\": \"xsddqxadwcds\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \"prices\" : {\n\t    \"price\" : 200\n  \t}\n}")

            	req, _ := http.NewRequest("POST", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n  \"sku\": \"xsddqxadwcds\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \"prices\" : {\n\t    \"price\" : 200\n  \t}\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n  \"sku\": \"xsddqxadwcds\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \"prices\" : {\n\t    \"price\" : 200\n  \t}\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
#            Postman dont show

        - lang: 'Objective-C'
          source: |
#            Postman dont show

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products"

            payload = "{\n  \"sku\": \"xsddqxadwcds\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \"prices\" : {\n\t    \"price\" : 200\n  \t}\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
  /products/{id}/:
    get:
      tags:
        - Products
      description: |
        Returns a product based on a single ID

        ### Includes
        You can give the following values on includes parameter: `brands, categories, routes, stocks`
      operationId: getProductById
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
        - $ref: '#/parameters/LimitParam'
        - name: id
          in: path
          description: ID of product to get
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Product response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Product'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n  \"sku\": \"Foobar product from API.\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": false,\n  \"in_homepage\": true,\n  \"is_digital\": true,\n  \"url_digital\": \"\",\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [\n    \"facebook\"\n  ],\n  \"expires_at\": \"2018-09-20T10:12:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 12\n    },\n    {\n      \"id\": 3,\n      \"position\": 13\n    }\n  ],\n  \"i18n\": {\n  \t\t\n\t      \"pt_PT\": {\n\t          \"name\": \"Foobar field\",\n\t          \"synopsis\": \"Foobar Synopsis\",\n\t          \"description\": \"Foobar description\",\n\t          \"characteristics\": \"Foobar characteristics\",\n\t          \"seo\": {\n\t        \t\"title\": \"Title of product here\",\n\t\t        \"keywords\": \"product, foobar, seo, keywords\",\n\t\t        \"description\": \"Foobar product foo bar\"\n\t          }\n\t    \n  \t\t}\n  },\n  \"stocks\": \"unlimited\"\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/products/1 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
              "sku": "Foobar product from API.",
              "id_taxes_group": 1,
              "manual": "Manual text value.",
              "url_video": "",
              "is_new": true,
              "is_preferred": false,
              "in_homepage": true,
              "is_digital": true,
              "url_digital": "",
              "weight": 0.10,
              "height": 0.50,
              "width": 1.30,
              "length": 1.00,
              "shipping_amount": 0,
              "shipping_multiplies": true,
              "position": 2,
              "visibility": [
                "facebook"
              ],
              "expires_at": "2018-09-20T10:12:20+00:00",
              "active": true,
              "brand": 1,
              "categories": [
                {
                  "id": 1,
                  "position": 12
                },
                {
                  "id": 3,
                  "position": 13
                }
              ],
              "i18n": {

                    "pt_PT": {
                        "name": "Foobar field",
                        "synopsis": "Foobar Synopsis",
                        "description": "Foobar description",
                        "characteristics": "Foobar characteristics",
                        "seo": {
                        "title": "Title of product here",
                        "keywords": "product, foobar, seo, keywords",
                        "description": "Foobar product foo bar"
                        }

                  }
              },
              "stocks": "unlimited"
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1068?includes=prices",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "strings"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/products/1"

              payload := strings.NewReader("{\n  \"sku\": \"Foobar product from API.\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": false,\n  \"in_homepage\": true,\n  \"is_digital\": true,\n  \"url_digital\": \"\",\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [\n    \"facebook\"\n  ],\n  \"expires_at\": \"2018-09-20T10:12:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 12\n    },\n    {\n      \"id\": 3,\n      \"position\": 13\n    }\n  ],\n  \"i18n\": {\n  \t\t\n\t      \"pt_PT\": {\n\t          \"name\": \"Foobar field\",\n\t          \"synopsis\": \"Foobar Synopsis\",\n\t          \"description\": \"Foobar description\",\n\t          \"characteristics\": \"Foobar characteristics\",\n\t          \"seo\": {\n\t        \t\"title\": \"Title of product here\",\n\t\t        \"keywords\": \"product, foobar, seo, keywords\",\n\t\t        \"description\": \"Foobar product foo bar\"\n\t          }\n\t    \n  \t\t}\n  },\n  \"stocks\": \"unlimited\"\n}")

              req, _ := http.NewRequest("POST", url, payload)

              req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              req.Header.Add("Content-Type", "application/json")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n  \"sku\": \"Foobar product from API.\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": false,\n  \"in_homepage\": true,\n  \"is_digital\": true,\n  \"url_digital\": \"\",\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [\n    \"facebook\"\n  ],\n  \"expires_at\": \"2018-09-20T10:12:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 12\n    },\n    {\n      \"id\": 3,\n      \"position\": 13\n    }\n  ],\n  \"i18n\": {\n  \t\t\n\t      \"pt_PT\": {\n\t          \"name\": \"Foobar field\",\n\t          \"synopsis\": \"Foobar Synopsis\",\n\t          \"description\": \"Foobar description\",\n\t          \"characteristics\": \"Foobar characteristics\",\n\t          \"seo\": {\n\t        \t\"title\": \"Title of product here\",\n\t\t        \"keywords\": \"product, foobar, seo, keywords\",\n\t\t        \"description\": \"Foobar product foo bar\"\n\t          }\n\t    \n  \t\t}\n  },\n  \"stocks\": \"unlimited\"\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n  \"sku\": \"Foobar product from API.\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": false,\n  \"in_homepage\": true,\n  \"is_digital\": true,\n  \"url_digital\": \"\",\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [\n    \"facebook\"\n  ],\n  \"expires_at\": \"2018-09-20T10:12:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 12\n    },\n    {\n      \"id\": 3,\n      \"position\": 13\n    }\n  ],\n  \"i18n\": {\n  \t\t\n\t      \"pt_PT\": {\n\t          \"name\": \"Foobar field\",\n\t          \"synopsis\": \"Foobar Synopsis\",\n\t          \"description\": \"Foobar description\",\n\t          \"characteristics\": \"Foobar characteristics\",\n\t          \"seo\": {\n\t        \t\"title\": \"Title of product here\",\n\t\t        \"keywords\": \"product, foobar, seo, keywords\",\n\t\t        \"description\": \"Foobar product foo bar\"\n\t          }\n\t    \n  \t\t}\n  },\n  \"stocks\": \"unlimited\"\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1"

            payload = "{\n  \"sku\": \"Foobar product from API.\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": false,\n  \"in_homepage\": true,\n  \"is_digital\": true,\n  \"url_digital\": \"\",\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [\n    \"facebook\"\n  ],\n  \"expires_at\": \"2018-09-20T10:12:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 1,\n      \"position\": 12\n    },\n    {\n      \"id\": 3,\n      \"position\": 13\n    }\n  ],\n  \"i18n\": {\n  \t\t\n\t      \"pt_PT\": {\n\t          \"name\": \"Foobar field\",\n\t          \"synopsis\": \"Foobar Synopsis\",\n\t          \"description\": \"Foobar description\",\n\t          \"characteristics\": \"Foobar characteristics\",\n\t          \"seo\": {\n\t        \t\"title\": \"Title of product here\",\n\t\t        \"keywords\": \"product, foobar, seo, keywords\",\n\t\t        \"description\": \"Foobar product foo bar\"\n\t          }\n\t    \n  \t\t}\n  },\n  \"stocks\": \"unlimited\"\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
    delete:
      tags:
        - Products
      description: deletes a single product based on the ID supplied
      operationId: deleteProductById
      parameters:
        - name: id
          in: path
          description: ID of product to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Product has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("APIToken", "854ebdbae803e0edd4f8690cf4c7528c8ec96780");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X DELETE \
            http://api.facestore.local:90/v1/products/1 \
            -H 'APIToken: 854ebdbae803e0edd4f8690cf4c7528c8ec96780' \
            -H 'Cache-Control: no-cache'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/146/variants/14",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 854ebdbae803e0edd4f8690cf4c7528c8ec96780",
                "Cache-Control: no-cache"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
              "fmt"
              "net/http"
              "io/ioutil"
            )

            func main() {

              url := "http://api.facestore.local:90/v1/products/1"

              req, _ := http.NewRequest("DELETE", url, nil)

              req.Header.Add("APIToken", "854ebdbae803e0edd4f8690cf4c7528c8ec96780")
              req.Header.Add("Cache-Control", "no-cache")

              res, _ := http.DefaultClient.Do(req)

              defer res.Body.Close()
              body, _ := ioutil.ReadAll(res.Body)

              fmt.Println(res)
              fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1",
              "method": "DELETE",
              "headers": {
                "APIToken": "854ebdbae803e0edd4f8690cf4c7528c8ec96780",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1")
              .delete(null)
              .addHeader("APIToken", "854ebdbae803e0edd4f8690cf4c7528c8ec96780")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "854ebdbae803e0edd4f8690cf4c7528c8ec96780",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"854ebdbae803e0edd4f8690cf4c7528c8ec96780",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1"

            headers = {
                'APIToken': "854ebdbae803e0edd4f8690cf4c7528c8ec96780",
                'Cache-Control': "no-cache"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
    put:
      tags:
        - Products
      description: update a single product based on the ID supplied
      operationId: updateProductById
      parameters:
        - name: id
          in: path
          description: ID of product to update
          required: true
          type: integer
          format: int64
        - name: tax
          in: body
          description: Product to add to the store
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        200:
          description: Product has been updated
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1063");
            var request = new RestRequest(Method.PUT);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n  \"sku\": \"alalalal\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 2,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \t\"prices\" : {\n\t    \"price\" : 250\n  \t}\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X PUT \
              http://api.facestore.local:90/v1/products/1063 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
              "sku": "alalalal",
              "id_taxes_group": 1,
              "manual": "Manual text value.",
              "url_video": "",
              "is_new": true,
              "is_preferred": true,
              "in_homepage": true,
              "weight": 0.10,
              "height": 0.50,
              "width": 1.30,
              "length": 1.00,
              "shipping_amount": 0,
              "shipping_multiplies": true,
              "position": 2,
              "visibility": [
                "mobile",
                "webstore"
              ],
              "expires_at": "2055-12-2T15:18:20+00:00",
              "active": true,
              "brand": 1,
              "categories": [
                {
                  "id": 2,
                  "position": 1
                }
              ],
              "i18n": [
              	{
                	  "locale": "pt_PT",
                      "name": "Foobar field",
                      "synopsis": "Foobar Synopsis",
                      "description": "Foobar description",
                      "characteristics": "Foobar characteristics",
                      "specifications": "Foobar specifications",
                      "seo": {
                        "title": "Title of product here",
                      "keywords": "product, foobar, seo, keywords",
                      "description": "Foobar product foo bar"
                      }
              	}
              ],
              	"prices" : {
            	    "price" : 250
              	}
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1063",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\n  \"sku\": \"alalalal\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 2,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \t\"prices\" : {\n\t    \"price\" : 250\n  \t}\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1063"

            	payload := strings.NewReader("{\n  \"sku\": \"alalalal\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 2,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \t\"prices\" : {\n\t    \"price\" : 250\n  \t}\n}")

            	req, _ := http.NewRequest("PUT", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1063",
              "method": "PUT",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n  \"sku\": \"alalalal\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 2,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \t\"prices\" : {\n\t    \"price\" : 250\n  \t}\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n  \"sku\": \"alalalal\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 2,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \t\"prices\" : {\n\t    \"price\" : 250\n  \t}\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1063")
              .put(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
#            Postman dont show

        - lang: 'Objective-C'
          source: |
#            Postman dont show

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1063"

            payload = "{\n  \"sku\": \"alalalal\",\n  \"id_taxes_group\": 1,\n  \"manual\": \"Manual text value.\",\n  \"url_video\": \"\",\n  \"is_new\": true,\n  \"is_preferred\": true,\n  \"in_homepage\": true,\n  \"weight\": 0.10,\n  \"height\": 0.50,\n  \"width\": 1.30,\n  \"length\": 1.00,\n  \"shipping_amount\": 0,\n  \"shipping_multiplies\": true,\n  \"position\": 2,\n  \"visibility\": [  \n    \"mobile\",\n    \"webstore\"\n  ],\n  \"expires_at\": \"2055-12-2T15:18:20+00:00\",\n  \"active\": true,\n  \"brand\": 1,\n  \"categories\": [\n    {\n      \"id\": 2,\n      \"position\": 1\n    }\n  ],\n  \"i18n\": [\n  \t{\n    \t  \"locale\": \"pt_PT\",\n          \"name\": \"Foobar field\",\n          \"synopsis\": \"Foobar Synopsis\",\n          \"description\": \"Foobar description\",\n          \"characteristics\": \"Foobar characteristics\",\n          \"specifications\": \"Foobar specifications\",\n          \"seo\": {\n            \"title\": \"Title of product here\",\n          \"keywords\": \"product, foobar, seo, keywords\",\n          \"description\": \"Foobar product foo bar\"\n          }\n  \t}\n  ],\n  \t\"prices\" : {\n\t    \"price\" : 250\n  \t}\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("PUT", url, data=payload, headers=headers)

            print(response.text)
  /products/{id}/uploads/:
    post:
      tags:
        - Products Uploads
      summary: Upload de images for product
      operationId: uploadProductsImages
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product to update
          required: true
          type: integer
          format: int64
        - name: image
          in: formData
          description: File for product
          type: file
      responses:
        201:
          description: ProductImage response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ProductImage'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
        423:
          description: Locked
          schema:
            type: object
            items:
              $ref: '#/definitions/Locked'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/869/uploads");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/x-www-form-urlencoded");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddHeader("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW");
            request.AddParameter("multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW", "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/products/869/uploads \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/x-www-form-urlencoded' \
              -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW' \
              -F image=undefined

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/869/uploads",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/x-www-form-urlencoded",
                "content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/869/uploads"

            	payload := strings.NewReader("------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--")

            	req, _ := http.NewRequest("POST", url, payload)

            	req.Header.Add("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW")
            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/x-www-form-urlencoded")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var form = new FormData();
            form.append("image", "");

            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/869/uploads",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/x-www-form-urlencoded",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "contentType": false,
              "mimeType": "multipart/form-data",
              "data": form
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW");
            RequestBody body = RequestBody.create(mediaType, "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/869/uploads")
              .post(body)
              .addHeader("content-type", "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW")
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/x-www-form-urlencoded")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "content-type": "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/x-www-form-urlencoded",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              [
                "name": "image",
                "fileName": ""
              ]
            ]

            let boundary = "----WebKitFormBoundary7MA4YWxkTrZu0gW"

            var body = ""
            var error: NSError? = nil
            for param in parameters {
              let paramName = param["name"]!
              body += "--\(boundary)\r\n"
              body += "Content-Disposition:form-data; name=\"\(paramName)\""
              if let filename = param["fileName"] {
                let contentType = param["content-type"]!
                let fileContent = String(contentsOfFile: filename, encoding: String.Encoding.utf8)
                if (error != nil) {
                  print(error)
                }
                body += "; filename=\"\(filename)\"\r\n"
                body += "Content-Type: \(contentType)\r\n\r\n"
                body += fileContent
              } else if let paramValue = param["value"] {
                body += "\r\n\r\n\(paramValue)"
              }
            }

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/869/uploads")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"content-type": @"multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
                                       @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/x-www-form-urlencoded",
                                       @"Cache-Control": @"no-cache" };
            NSArray *parameters = @[ @{ @"name": @"image", @"fileName": @"" } ];
            NSString *boundary = @"----WebKitFormBoundary7MA4YWxkTrZu0gW";

            NSError *error;
            NSMutableString *body = [NSMutableString string];
            for (NSDictionary *param in parameters) {
                [body appendFormat:@"--%@\r\n", boundary];
                if (param[@"fileName"]) {
                    [body appendFormat:@"Content-Disposition:form-data; name=\"%@\"; filename=\"%@\"\r\n", param[@"name"], param[@"fileName"]];
                    [body appendFormat:@"Content-Type: %@\r\n\r\n", param[@"contentType"]];
                    [body appendFormat:@"%@", [NSString stringWithContentsOfFile:param[@"fileName"] encoding:NSUTF8StringEncoding error:&error]];
                    if (error) {
                        NSLog(@"%@", error);
                    }
                } else {
                    [body appendFormat:@"Content-Disposition:form-data; name=\"%@\"\r\n\r\n", param[@"name"]];
                    [body appendFormat:@"%@", param[@"value"]];
                }
            }
            [body appendFormat:@"\r\n--%@--\r\n", boundary];
            NSData *postData = [body dataUsingEncoding:NSUTF8StringEncoding];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/869/uploads"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/869/uploads"

            payload = "------WebKitFormBoundary7MA4YWxkTrZu0gW\r\nContent-Disposition: form-data; name=\"image\"\r\n\r\n\r\n------WebKitFormBoundary7MA4YWxkTrZu0gW--"
            headers = {
                'content-type': "multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW",
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/x-www-form-urlencoded",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
    get:
      tags:
        - Products Uploads
      summary: Get images for product
      operationId: getProductImages
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Upload response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ProductImage'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1373/uploads/");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              http://api.facestore.local:90/v1/products/1373/uploads/ \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1373/uploads/",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1373/uploads/"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1373/uploads/",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1373/uploads/")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1373/uploads/")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1373/uploads/"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1373/uploads/"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
  /products/{id}/uploads/{id_image}/:
    get:
      tags:
        - Products Uploads
      summary: Get images for product
      operationId: getProductImagesById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product to get
          required: true
          type: integer
          format: int64
        - name: id_image
          in: path
          description: ID of productImage to get
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Upload response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ProductImage'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/37/uploads/118");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              http://api.facestore.local:90/v1/products/37/uploads/118 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/37/uploads/118",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/37/uploads/118"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/37/uploads/118",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/37/uploads/118")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/37/uploads/118")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/37/uploads/118"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/37/uploads/118"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    delete:
        tags:
          - Products Uploads
        summary: Delete image for products
        operationId: deleteProductImageById
        parameters:
          - name: id
            in: path
            description: ID of product to get
            required: true
            type: integer
            format: int64
          - name: id_image
            in: path
            description: ID of productImage to get
            required: true
            type: integer
            format: int64
        responses:
          200:
            description: The request has succeeded.
          404:
            description: Resource not found
            schema:
              type: object
              items:
                $ref: '#/definitions/NotFoundResponse'
        x-code-samples:
          - lang: 'C#'
            source: |
              var client = new RestClient("http://api.facestore.local:90/v1/products/37/uploads/110");
              var request = new RestRequest(Method.DELETE);
              request.AddHeader("Cache-Control", "no-cache");
              request.AddHeader("Content-Type", "application/json");
              request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
              IRestResponse response = client.Execute(request);

          - lang: 'cURL'
            source: |
              curl -X DELETE \
                http://api.facestore.local:90/v1/products/37/uploads/110 \
                -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
                -H 'Cache-Control: no-cache' \
                -H 'Content-Type: application/json'

          - lang: 'PHP'
            source: |
              <?php

              $curl = curl_init();

              curl_setopt_array($curl, array(
                CURLOPT_PORT => "90",
                CURLOPT_URL => "http://api.facestore.local:90/v1/products/37/uploads/110",
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_ENCODING => "",
                CURLOPT_MAXREDIRS => 10,
                CURLOPT_TIMEOUT => 30,
                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                CURLOPT_CUSTOMREQUEST => "DELETE",
                CURLOPT_HTTPHEADER => array(
                  "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                  "Cache-Control: no-cache",
                  "Content-Type: application/json"
                ),
              ));

              $response = curl_exec($curl);
              $err = curl_error($curl);

              curl_close($curl);

              if ($err) {
                echo "cURL Error #:" . $err;
              } else {
                echo $response;
              }

          - lang: 'GO'
            source: |
              package main

              import (
              	"fmt"
              	"net/http"
              	"io/ioutil"
              )

              func main() {

              	url := "http://api.facestore.local:90/v1/products/37/uploads/110"

              	req, _ := http.NewRequest("DELETE", url, nil)

              	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              	req.Header.Add("Content-Type", "application/json")
              	req.Header.Add("Cache-Control", "no-cache")

              	res, _ := http.DefaultClient.Do(req)

              	defer res.Body.Close()
              	body, _ := ioutil.ReadAll(res.Body)

              	fmt.Println(res)
              	fmt.Println(string(body))

              }

          - lang: 'JavaScript'
            source: |
              var settings = {
                "async": true,
                "crossDomain": true,
                "url": "http://api.facestore.local:90/v1/products/37/uploads/110",
                "method": "DELETE",
                "headers": {
                  "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                  "Content-Type": "application/json",
                  "Cache-Control": "no-cache"
                }
              }

              $.ajax(settings).done(function (response) {
                console.log(response);
              });

          - lang: 'Java'
            source: |
              OkHttpClient client = new OkHttpClient();

              Request request = new Request.Builder()
                .url("http://api.facestore.local:90/v1/products/37/uploads/110")
                .delete(null)
                .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
                .addHeader("Content-Type", "application/json")
                .addHeader("Cache-Control", "no-cache")
                .build();

              Response response = client.newCall(request).execute();

          - lang: 'Swift'
            source: |
              import Foundation

              let headers = [
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              ]

              let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/37/uploads/110")! as URL,
                                                      cachePolicy: .useProtocolCachePolicy,
                                                  timeoutInterval: 10.0)
              request.httpMethod = "DELETE"
              request.allHTTPHeaderFields = headers

              let session = URLSession.shared
              let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
                if (error != nil) {
                  print(error)
                } else {
                  let httpResponse = response as? HTTPURLResponse
                  print(httpResponse)
                }
              })

              dataTask.resume()

          - lang: 'Objective-C'
            source: |
              #import <Foundation/Foundation.h>

              NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                         @"Content-Type": @"application/json",
                                         @"Cache-Control": @"no-cache" };

              NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/37/uploads/110"]
                                                                     cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                                 timeoutInterval:10.0];
              [request setHTTPMethod:@"DELETE"];
              [request setAllHTTPHeaderFields:headers];

              NSURLSession *session = [NSURLSession sharedSession];
              NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                          completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                              if (error) {
                                                                  NSLog(@"%@", error);
                                                              } else {
                                                                  NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                  NSLog(@"%@", httpResponse);
                                                              }
                                                          }];
              [dataTask resume];

          - lang: 'Phyton'
            source: |
              import requests

              url = "http://api.facestore.local:90/v1/products/37/uploads/110"

              headers = {
                  'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                  'Content-Type': "application/json",
                  'Cache-Control': "no-cache"
                  }

              response = requests.request("DELETE", url, headers=headers)

              print(response.text)
  /products/{id}/discounts/:
    get:
      tags:
        - Products Discounts
      description: Returns all product discounts from the system that the user has access to
      operationId: getProductDiscounts
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product to get
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Discount response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Discount'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1067/discounts");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              http://api.facestore.local:90/v1/products/1067/discounts \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1067/discounts",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1067/discounts"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1067/discounts",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1067/discounts")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1067/discounts")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1067/discounts"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1067/discounts"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    post:
      tags:
        - Products Discounts
      description: Creates a new product discount in the store.
      operationId: addProductDiscount
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          type: integer
          format: int64
        - name: discount
          in: body
          description: Product disocunt to add to the store
          required: true
          schema:
            $ref: '#/definitions/Discount'
      responses:
        201:
          description: Discount response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Variant'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1068/discounts");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/products/1068/discounts \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
                "discount_percentage" : 99,
                "begin_at" : "2018-05-14T15:38:06+00:00",
                "end_at" : "2019-06-14T15:38:06+00:00",
                "active" : true
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1068/discounts",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1068/discounts"

            	payload := strings.NewReader("{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}")

            	req, _ := http.NewRequest("POST", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1068/discounts",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1068/discounts")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
#            Postman dont show

        - lang: 'Objective-C'
          source: |
#            Postman dont show

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1068/discounts"

            payload = "{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
  /products/{id}/discounts/{id_discount}/:
    get:
      tags:
        - Products Discounts
      description: Returns a single product disocunt based on the ID supplied
      operationId: getProductDiscountsByID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product to get
          required: true
          type: integer
          format: int64
        - name: id_discount
          in: path
          description: ID of disocunt to get
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Discount response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Discount'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1068/discounts/834");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              http://api.facestore.local:90/v1/products/1068/discounts/834 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1068/discounts/834",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1068/discounts/834"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1068/discounts/834",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1068/discounts/834")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1068/discounts/834")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1068/discounts/834"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1068/discounts/834"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    delete:
      tags:
        - Products Discounts
      description: deletes a single product discount based on the ID supplied
      operationId: deleteProductDiscountById
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          type: integer
          format: int64
        - name: id_discount
          in: path
          description: ID of product discount to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Discount has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1067/discounts/4560");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X DELETE \
              http://api.facestore.local:90/v1/products/1067/discounts/4560 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1067/discounts/4560",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1067/discounts/4560"

            	req, _ := http.NewRequest("DELETE", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1067/discounts/4560",
              "method": "DELETE",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1067/discounts/4560")
              .delete(null)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1067/discounts/4560")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1067/discounts/4560"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1067/discounts/4560"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Cache-Control': "no-cache"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
    put:
      tags:
        - Products Discounts
      description: update a single product discount based on the ID supplied
      operationId: updateProductDiscountById
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          type: integer
          format: int64
        - name: id_discount
          in: path
          description: ID of discount to update
          required: true
          type: integer
          format: int64
        - name: discount
          in: body
          description: ID of product discount to update
          required: true
          schema:
            $ref: '#/definitions/Discount'
      responses:
        200:
          description: Discount has been updated
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1068/discounts/4641");
            var request = new RestRequest(Method.PUT);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X PUT \
              http://api.facestore.local:90/v1/products/1068/discounts/4641 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
                "discount_percentage" : 99,
                "begin_at" : "2018-05-14T15:38:06+00:00",
                "end_at" : "2019-06-14T15:38:06+00:00",
                "active" : true
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1068/discounts/4641",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1068/discounts/4641"

            	payload := strings.NewReader("{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}")

            	req, _ := http.NewRequest("PUT", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1068/discounts/4641",
              "method": "PUT",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1068/discounts/4641")
              .put(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
#            Postman dont show

        - lang: 'Objective-C'
          source: |
#            Postman dont show

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1068/discounts/4641"

            payload = "{\n    \"discount_percentage\" : 99,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("PUT", url, data=payload, headers=headers)

            print(response.text)
  /products/{id}/variants/:
    get:
      tags:
        - Products Variants
      description: Returns all product variants from the system that the user has access to
      operationId: getProductVariants
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Products response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Product'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1070/variants/");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              http://api.facestore.local:90/v1/products/1070/variants/ \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1070/variants/",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1070/variants/"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1070/variants/",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1070/variants/")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1070/variants/")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1070/variants/"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1070/variants/"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    post:
      tags:
        - Products Variants
      description: Creates a new product variant in the store.
      operationId: addProductVariant
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of Product
          required: true
          type: integer
          format: int64
        - name: variant
          in: body
          description: Product variant to add to the store
          required: true
          schema:
            $ref: '#/definitions/Variant'
      responses:
        201:
          description: Product response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Variant'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1140/variants/");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n\t\"attributes\" : [\n\t{\n\t\t\"id\" : 1,\n\t\t\"id_option\" : 18\n\t}\n\t],\n\t\"sku\" : \" t1e51qswt\",\n\t\"quantity\" : 40,\n\t\"prices\" : {\t\n\t    \"price\" : 8\n  \t}\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/products/1140/variants/ \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
            	"attributes" : [
            	{
            		"id" : 1,
            		"id_option" : 18
            	}
            	],
            	"sku" : " t1e51qswt",
            	"quantity" : 40,
            	"prices" : {
            	    "price" : 8
              	}
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1140/variants/",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\n\t\"attributes\" : [\n\t{\n\t\t\"id\" : 1,\n\t\t\"id_option\" : 18\n\t}\n\t],\n\t\"sku\" : \" t1e51qswt\",\n\t\"quantity\" : 40,\n\t\"prices\" : {\t\n\t    \"price\" : 8\n  \t}\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1140/variants/"

            	payload := strings.NewReader("{\n\t\"attributes\" : [\n\t{\n\t\t\"id\" : 1,\n\t\t\"id_option\" : 18\n\t}\n\t],\n\t\"sku\" : \" t1e51qswt\",\n\t\"quantity\" : 40,\n\t\"prices\" : {\t\n\t    \"price\" : 8\n  \t}\n}")

            	req, _ := http.NewRequest("POST", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1140/variants/",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n\t\"attributes\" : [\n\t{\n\t\t\"id\" : 1,\n\t\t\"id_option\" : 18\n\t}\n\t],\n\t\"sku\" : \" t1e51qswt\",\n\t\"quantity\" : 40,\n\t\"prices\" : {\t\n\t    \"price\" : 8\n  \t}\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n\t\"attributes\" : [\n\t{\n\t\t\"id\" : 1,\n\t\t\"id_option\" : 18\n\t}\n\t],\n\t\"sku\" : \" t1e51qswt\",\n\t\"quantity\" : 40,\n\t\"prices\" : {\t\n\t    \"price\" : 8\n  \t}\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1140/variants/")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              "attributes": [
                [
                  "id": 1,
                  "id_option": 18
                ]
              ],
              "sku": " t1e51qswt",
              "quantity": 40,
              "prices": ["price": 8]
            ] as [String : Any]

            let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1140/variants/")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "POST"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };
            NSDictionary *parameters = @{ @"attributes": @[ @{ @"id": @1, @"id_option": @18 } ],
                                          @"sku": @" t1e51qswt",
                                          @"quantity": @40,
                                          @"prices": @{ @"price": @8 } };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1140/variants/"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"POST"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1140/variants/"

            payload = "{\n\t\"attributes\" : [\n\t{\n\t\t\"id\" : 1,\n\t\t\"id_option\" : 18\n\t}\n\t],\n\t\"sku\" : \" t1e51qswt\",\n\t\"quantity\" : 40,\n\t\"prices\" : {\t\n\t    \"price\" : 8\n  \t}\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
  /products/{id}/variants/{id_variant}:
    delete:
      tags:
        - Products Variants
      description: deletes a single product variant based on the ID supplied
      operationId: deleteProductVariantById
      parameters:
        - name: id
          in: path
          description: ID of product variant to delete
          required: true
          type: integer
          format: int64
        - name: id_variant
          in: path
          description: ID of product variant to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Product has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1054/variants/690");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X DELETE \
              http://api.facestore.local:90/v1/products/1054/variants/690 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1054/variants/690",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1054/variants/690"

            	req, _ := http.NewRequest("DELETE", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1054/variants/690",
              "method": "DELETE",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1054/variants/690")
              .delete(null)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1054/variants/690")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1054/variants/690"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1054/variants/690"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
    get:
      tags:
        - Products Variants
      description: Returns a single product variant based on the ID supplied
      operationId: getProductVariantsByID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product to get
          required: true
          type: integer
          format: int64
        - name: id_variant
          in: path
          description: ID of disocunt to get
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Products response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Variant'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1067/variants/834");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
           curl -X GET \
             http://api.facestore.local:90/v1/products/1067/variants/834 \
             -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
             -H 'Cache-Control: no-cache' \
             -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1067/variants/834",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1067/variants/834"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1067/variants/834",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1067/variants/834")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1067/variants/834")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1067/variants/834"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1067/variants/834"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    put:
      tags:
        - Products Variants
      description: update a single product variants based on the ID supplied
      operationId: updateProductVariantsById
      parameters:
        - name: id
          in: path
          description: ID of product variant to update
          required: true
          type: integer
          format: int64
        - name: id_variant
          in: path
          description: Product variant to add to the store
          required: true
          type: integer
          format: int64
        - name: variant
          in: body
          description: Product variant to update
          required: true
          schema:
            $ref: '#/definitions/Variant'
      responses:
        200:
          description: Product has been updated
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1067/variants/834");
            var request = new RestRequest(Method.PUT);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n\t\"sku\" : \"jverjvwepom\",\n\t\"quantity\" : 12,\n\t\"prices\" : {\t\n\t\t\"price\" : 20\n\t}\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
           curl -X PUT \
             http://api.facestore.local:90/v1/products/1067/variants/834 \
             -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
             -H 'Cache-Control: no-cache' \
             -H 'Content-Type: application/json' \
             -d '{
           	"sku" : "jverjvwepom",
           	"quantity" : 12,
           	"prices" : {
           		"price" : 20
           	}
           }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1067/variants/834",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\n\t\"sku\" : \"jverjvwepom\",\n\t\"quantity\" : 12,\n\t\"prices\" : {\t\n\t\t\"price\" : 20\n\t}\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1067/variants/834"

            	payload := strings.NewReader("{\n\t\"sku\" : \"jverjvwepom\",\n\t\"quantity\" : 12,\n\t\"prices\" : {\t\n\t\t\"price\" : 20\n\t}\n}")

            	req, _ := http.NewRequest("PUT", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1067/variants/834",
              "method": "PUT",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n\t\"sku\" : \"jverjvwepom\",\n\t\"quantity\" : 12,\n\t\"prices\" : {\t\n\t\t\"price\" : 20\n\t}\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n\t\"sku\" : \"jverjvwepom\",\n\t\"quantity\" : 12,\n\t\"prices\" : {\t\n\t\t\"price\" : 20\n\t}\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1067/variants/834")
              .put(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]
            let parameters = [
              "sku": "jverjvwepom",
              "quantity": 12,
              "prices": ["price": 20]
            ] as [String : Any]

            let postData = JSONSerialization.data(withJSONObject: parameters, options: [])

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1067/variants/834")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "PUT"
            request.allHTTPHeaderFields = headers
            request.httpBody = postData as Data

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };
            NSDictionary *parameters = @{ @"sku": @"jverjvwepom",
                                          @"quantity": @12,
                                          @"prices": @{ @"price": @20 } };

            NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1067/variants/834"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"PUT"];
            [request setAllHTTPHeaderFields:headers];
            [request setHTTPBody:postData];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1067/variants/834"

            payload = "{\n\t\"sku\" : \"jverjvwepom\",\n\t\"quantity\" : 12,\n\t\"prices\" : {\t\n\t\t\"price\" : 20\n\t}\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("PUT", url, data=payload, headers=headers)

            print(response.text)
  /products/{id}/variants/{id_variant}/discounts:
    get:
      tags:
        - Products Variants Discounts
      description: Returns all product variants discount from the system that the user has access to
      operationId: getProductVariantsDiscounts
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          type: integer
          format: int64
        - name: id_variant
          in: path
          description: ID of variant to get
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Discount response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/VariantDiscount'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1068/variants/843/discounts/");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              http://api.facestore.local:90/v1/products/1068/variants/843/discounts/ \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1068/variants/843/discounts/",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1068/variants/843/discounts/"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1068/variants/843/discounts/",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1068/variants/843/discounts/")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1068/variants/843/discounts/")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1068/variants/843/discounts/"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1068/variants/843/discounts/"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    post:
      tags:
        - Products Variants Discounts
      description: Creates a new product variant discount in the store.
      operationId: addProductVariantDiscount
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          type: integer
          format: int64
        - name: id_variant
          in: path
          description: ID of variant
          required: true
          type: integer
          format: int64
        - name: discount
          in: body
          description: Product variant discount to add to the store
          required: true
          schema:
            $ref: '#/definitions/VariantDiscount'
      responses:
        201:
          description: Discount response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/VariantDiscount'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1067/variants/841/discounts");
            var request = new RestRequest(Method.POST);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n    \"discount_percentage\" : 56,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X POST \
              http://api.facestore.local:90/v1/products/1067/variants/841/discounts \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
                "discount_percentage" : 56,
                "begin_at" : "2018-05-14T15:38:06+00:00",
                "end_at" : "2019-06-14T15:38:06+00:00",
                "active" : true
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1067/variants/841/discounts",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\n    \"discount_percentage\" : 56,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1067/variants/841/discounts"

            	payload := strings.NewReader("{\n    \"discount_percentage\" : 56,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}")

            	req, _ := http.NewRequest("POST", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1067/variants/841/discounts",
              "method": "POST",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n    \"discount_percentage\" : 56,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n    \"discount_percentage\" : 56,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1067/variants/841/discounts")
              .post(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
#            Postman dont show

        - lang: 'Objective-C'
          source: |
#            Postman dont show

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1067/variants/841/discounts"

            payload = "{\n    \"discount_percentage\" : 56,\n    \"begin_at\" : \"2018-05-14T15:38:06+00:00\",\n    \"end_at\" : \"2019-06-14T15:38:06+00:00\",\n    \"active\" : true\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("POST", url, data=payload, headers=headers)

            print(response.text)
  /products/{id}/variants/{id_variant}/discounts/{id_discount}:
    delete:
      tags:
        - Products Variants Discounts
      description: deletes a single product variant discount based on the ID supplied
      operationId: deleteProductVariantDiscountById
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          type: integer
          format: int64
        - name: id_variant
          in: path
          description: ID of variant
          required: true
          type: integer
          format: int64
        - name: id_discount
          in: path
          description: ID of discount
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Discount has been deleted
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1031");
            var request = new RestRequest(Method.DELETE);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X DELETE \
              http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1031 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1031",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1031"

            	req, _ := http.NewRequest("DELETE", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1031",
              "method": "DELETE",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1031")
              .delete(null)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1031")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "DELETE"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1031"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"DELETE"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1031"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
    get:
      tags:
        - Products Variants Discounts
      description: Returns a single product variant discount based on the ID supplied
      operationId: getProductVariantsDiscountsByID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          type: integer
          format: int64
        - name: id_variant
          in: path
          description: ID of variant
          required: true
          type: integer
          format: int64
        - name: id_discount
          in: path
          description: ID of discount
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Products response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Discount'
              meta:
                type: object
                properties:
                  total:
                    type: string
        204:
          $ref: '#/responses/204'
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1043");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1043 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1043",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1043"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1043",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1043")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1043")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1043"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1067/variants/834/discounts/1043"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)
    put:
      tags:
        - Products Variants Discounts
      description: update a single product variants discounts based on the ID supplied
      operationId: updateProductVariantsDiscountsById
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          type: integer
          format: int64
        - name: id_variant
          in: path
          description: ID of variant
          required: true
          type: integer
          format: int64
        - name: id_discount
          in: path
          description: ID of discount
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Discount has been updated
        404:
          description: Resource not found
          schema:
            type: object
            items:
              $ref: '#/definitions/NotFoundResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/products/1067/variants/841/discounts/4628");
            var request = new RestRequest(Method.PUT);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            request.AddParameter("undefined", "{\n    \"discount_percentage\" : 75,\n    \"begin_at\" : \"2019-03-20T15:38:06+00:00\",\n    \"end_at\" : \"2019-04-14T15:38:06+00:00\",\n    \"active\" : true\n}", ParameterType.RequestBody);
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X PUT \
              http://api.facestore.local:90/v1/products/1067/variants/841/discounts/4628 \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json' \
              -d '{
                "discount_percentage" : 75,
                "begin_at" : "2019-03-20T15:38:06+00:00",
                "end_at" : "2019-04-14T15:38:06+00:00",
                "active" : true
            }'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/products/1067/variants/841/discounts/4628",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\n    \"discount_percentage\" : 75,\n    \"begin_at\" : \"2019-03-20T15:38:06+00:00\",\n    \"end_at\" : \"2019-04-14T15:38:06+00:00\",\n    \"active\" : true\n}",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"strings"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/products/1067/variants/841/discounts/4628"

            	payload := strings.NewReader("{\n    \"discount_percentage\" : 75,\n    \"begin_at\" : \"2019-03-20T15:38:06+00:00\",\n    \"end_at\" : \"2019-04-14T15:38:06+00:00\",\n    \"active\" : true\n}")

            	req, _ := http.NewRequest("PUT", url, payload)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/products/1067/variants/841/discounts/4628",
              "method": "PUT",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              },
              "processData": false,
              "data": "{\n    \"discount_percentage\" : 75,\n    \"begin_at\" : \"2019-03-20T15:38:06+00:00\",\n    \"end_at\" : \"2019-04-14T15:38:06+00:00\",\n    \"active\" : true\n}"
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\n    \"discount_percentage\" : 75,\n    \"begin_at\" : \"2019-03-20T15:38:06+00:00\",\n    \"end_at\" : \"2019-04-14T15:38:06+00:00\",\n    \"active\" : true\n}");
            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/products/1067/variants/841/discounts/4628")
              .put(body)
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
#            Postman dont show

        - lang: 'Objective-C'
          source: |
#            Postman dont show

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/products/1067/variants/841/discounts/4628"

            payload = "{\n    \"discount_percentage\" : 75,\n    \"begin_at\" : \"2019-03-20T15:38:06+00:00\",\n    \"end_at\" : \"2019-04-14T15:38:06+00:00\",\n    \"active\" : true\n}"
            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("PUT", url, data=payload, headers=headers)

            print(response.text)

  /settings/currencies:
    get:
      tags:
        - Settings
      description: |
        Returns all settings from the system that the user has access to

        ### Includes
        You can give the following values on includes parameter: `brands, categories, routes, stocks`
      operationId: getCurrencies
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/IncludesParam'
      responses:
        200:
          description: Currencies response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Currencies'
              meta:
                $ref: '#/definitions/MetaPartialResponse'
      x-code-samples:
        - lang: 'C#'
          source: |
            var client = new RestClient("http://api.facestore.local:90/v1/settings/currencies");
            var request = new RestRequest(Method.GET);
            request.AddHeader("Cache-Control", "no-cache");
            request.AddHeader("Content-Type", "application/json");
            request.AddHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551");
            IRestResponse response = client.Execute(request);

        - lang: 'cURL'
          source: |
            curl -X GET \
              http://api.facestore.local:90/v1/settings/currencies \
              -H 'APIToken: 083e7be2ca947a899db97d00db4f512db6a85551' \
              -H 'Cache-Control: no-cache' \
              -H 'Content-Type: application/json'

        - lang: 'PHP'
          source: |
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_PORT => "90",
              CURLOPT_URL => "http://api.facestore.local:90/v1/settings/currencies",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "APIToken: 083e7be2ca947a899db97d00db4f512db6a85551",
                "Cache-Control: no-cache",
                "Content-Type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }

        - lang: 'GO'
          source: |
            package main

            import (
            	"fmt"
            	"net/http"
            	"io/ioutil"
            )

            func main() {

            	url := "http://api.facestore.local:90/v1/settings/currencies"

            	req, _ := http.NewRequest("GET", url, nil)

            	req.Header.Add("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
            	req.Header.Add("Content-Type", "application/json")
            	req.Header.Add("Cache-Control", "no-cache")

            	res, _ := http.DefaultClient.Do(req)

            	defer res.Body.Close()
            	body, _ := ioutil.ReadAll(res.Body)

            	fmt.Println(res)
            	fmt.Println(string(body))

            }

        - lang: 'JavaScript'
          source: |
            var settings = {
              "async": true,
              "crossDomain": true,
              "url": "http://api.facestore.local:90/v1/settings/currencies",
              "method": "GET",
              "headers": {
                "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
                "Content-Type": "application/json",
                "Cache-Control": "no-cache"
              }
            }

            $.ajax(settings).done(function (response) {
              console.log(response);
            });

        - lang: 'Java'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("http://api.facestore.local:90/v1/settings/currencies")
              .get()
              .addHeader("APIToken", "083e7be2ca947a899db97d00db4f512db6a85551")
              .addHeader("Content-Type", "application/json")
              .addHeader("Cache-Control", "no-cache")
              .build();

            Response response = client.newCall(request).execute();

        - lang: 'Swift'
          source: |
            import Foundation

            let headers = [
              "APIToken": "083e7be2ca947a899db97d00db4f512db6a85551",
              "Content-Type": "application/json",
              "Cache-Control": "no-cache"
            ]

            let request = NSMutableURLRequest(url: NSURL(string: "http://api.facestore.local:90/v1/settings/currencies")! as URL,
                                                    cachePolicy: .useProtocolCachePolicy,
                                                timeoutInterval: 10.0)
            request.httpMethod = "GET"
            request.allHTTPHeaderFields = headers

            let session = URLSession.shared
            let dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in
              if (error != nil) {
                print(error)
              } else {
                let httpResponse = response as? HTTPURLResponse
                print(httpResponse)
              }
            })

            dataTask.resume()

        - lang: 'Objective-C'
          source: |
            #import <Foundation/Foundation.h>

            NSDictionary *headers = @{ @"APIToken": @"083e7be2ca947a899db97d00db4f512db6a85551",
                                       @"Content-Type": @"application/json",
                                       @"Cache-Control": @"no-cache" };

            NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"http://api.facestore.local:90/v1/settings/currencies"]
                                                                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                                                               timeoutInterval:10.0];
            [request setHTTPMethod:@"GET"];
            [request setAllHTTPHeaderFields:headers];

            NSURLSession *session = [NSURLSession sharedSession];
            NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request
                                                        completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {
                                                            if (error) {
                                                                NSLog(@"%@", error);
                                                            } else {
                                                                NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;
                                                                NSLog(@"%@", httpResponse);
                                                            }
                                                        }];
            [dataTask resume];

        - lang: 'Phyton'
          source: |
            import requests

            url = "http://api.facestore.local:90/v1/settings/currencies"

            headers = {
                'APIToken': "083e7be2ca947a899db97d00db4f512db6a85551",
                'Content-Type': "application/json",
                'Cache-Control': "no-cache"
                }

            response = requests.request("GET", url, headers=headers)

            print(response.text)

  /zipcode/{id}:
    get:
      tags:
        - Zip Code
      description: Return all data of zip code
      operationId: getZipCode
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of zip code to get
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Currencies response
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ZipCode'
              meta:
                $ref: '#/definitions/MetaPartialResponse'

definitions:
  Category:
    type: object
    properties:
      id:
        type: integer
      id_parent:
        type: integer
      position:
        type: integer
      image_small:
        type: string
        description: |
          The file to be attached. Must be multipart/form-data. The maximum file size is 2 MB.
      image_larger:
        type: string
        description: |
          The file to be attached. Must be multipart/form-data. The maximum file size is 2 MB.
      active:
        type: boolean
        example: true
      created_at:
        type: string
        format: 'date-time'
      updated_at:
        type: string
        format: 'date-time'
      visibility:
        type: array
        description: 'channels that resource are showed'
        items:
          type: string
          enum:
          - 'facebook'
          - 'mobile'
          - 'webstore'
          - 'none'
          - 'all'
      i18n:
        type: array
        description: I18n fields to categories
        items:
          $ref: '#/definitions/I18n'
      parents:
        type: object
        description: Parent of category
        items:
          $ref: '#/definitions/Category'
      children:
        type: array
        description: Children categories of category
        items:
          $ref: '#/definitions/Category'
    required:
      - id

  Brand:
    type: object
    properties:
      id:
        type: integer
        format: int64
      position:
        type: integer
        format: int64
        example: 1
      image_small:
        type: string
      image_larger:
        type: string
      active:
        type: boolean
        example: true
      created_at:
        type: string
        format: 'date-time'
      updated_at:
        type: string
        format: 'date-time'
      visibility:
        type: array
        description: 'channels that resource are showed'
        items:
          type: string
          enum:
          - 'facebook'
          - 'mobile'
          - 'webstore'
          - 'none'
          - 'all'
      i18n:
        type: array
        description: I18n fields to brands
        items:
          $ref: '#/definitions/I18n'
    required:
      - id

  Attribute:
    type: object
    properties:
      id:
        type: integer
        format: int64
      position:
        type: integer
        format: int64
        example: 1
      is_searchable:
         type: boolean
         example: true
      active:
        type: boolean
        example: true
      options:
        type: array
        description: Options of attributes
        items:
          $ref: '#/definitions/Options'
      i18n:
        type: array
        description: I18n fields to brands
        items:
          $ref: '#/definitions/I18n'
      created_at:
        type: string
        format: 'date-time'
      updated_at:
        type: string
        format: 'date-time'
    required:
      - id

  Options:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      position:
         type: integer
         format: int64
         example: 1
      aux_code:
        type: string
        example: M
      i18n:
        $ref: '#/definitions/I18n'
      created_at:
        type: string
        format: 'date-time'
      updated_at:
        type: string
        format: 'date-time'

  Customer:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      firstname:
        type: string
        example: John
      lastname:
        type: string
        example: Doe
      active:
        type: boolean
        example: true
      birthday:
        type: string
        format: 'date'
        example: 2
      vat:
        type: integer
        format: int64
        example: 1234567890
      email:
        type: string
        example: foobar@foo.com
      password:
        type: string
        example: password
      phone:
        type: string
        format: int64
        example: 912345678
      company:
        type: string
      gender:
        type: string
      received_newsletter:
        type: boolean
        example: true
      created_at:
        type: string
        format: 'date-time'
      updated_at:
        type: string
        format: 'date-time'
    required:
      - id

  CustomerLogin:
    type: object
    properties:
      email:
        type: string
        example: email@email.com
      password:
        type: string
        example: psw

  CustomerAddress:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      iso_code_district:
        type: string
        example: PT-01
      type:
        type: string
        example: abc
      address:
        type: string
        example: Rua de cima 184
      city:
        type: string
        example: porto
      zip_code:
        type: string
        example: 1234-567

  Order:
    type: object
    properties:
      uid:
        type: string
        example: 1a
      order_number:
        type: integer
        format: int64
        example: John Doe
      customer:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            example: 123abc
          gender:
            type: string
            example: 123abc
          vat_number:
            type: integer
            format: int64
            example: 1
          address:
            type: string
            example: 123abc
          address_zip_code:
            type: string
            example: 123abc
          address_city:
            type: string
            example: 123abc
          address_district:
            type: string
            example: 123abc
          address_district_iso_code:
            type: string
            example: 123abc
          address_country:
            type: string
            example: 123abc
          address_country_iso_code:
            type: string
            example: 123abc
          phone:
            type: string
            example: 123abc
          email:
            type: string
            example: 123abc
      iso_currency:
        type: string
        example: 123abc
      delivery:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            example: 123abc
          gender:
            type: string
            example: 123abc
          vat_number:
            type: integer
            format: int64
            example: 1
          address:
            type: string
            example: 123abc
          address_zip_code:
            type: string
            example: 123abc
          address_city:
            type: string
            example: 123abc
          address_district:
            type: string
            example: 123abc
          address_district_iso_code:
            type: string
            example: 123abc
          address_country:
            type: string
            example: 123abc
          address_country_iso_code:
            type: string
            example: 123abc
          type:
            type: string
            example: 123abc
          amount:
            type: integer
            format: int64
            example: 1
      payment:
        type: object
        properties:
          type:
            type: string
            example: 123abc
          tax:
            type: number
            format: float
            example: 1.5
          status:
            type: string
            example: 123abc
          status_observation:
            type: string
            example: 123abc
      status:
        type: string
        example: 123abc
      total_amount:
        type: number
        format: float
      total_tax_amount:
        type: number
        format: float
      observation:
        type: string
        example: 123abc
      created_at:
        type: string
        format: 'date-time'
        example: '2016-10-10T13:26:17+00:00'
      updated_at:
        type: string
        format: 'date-time'
        example: '2016-10-10T13:26:17+00:00'
      products:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
            variant:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                sku:
                  type: string
                  example: 123abc
                description:
                  type: string
                  example: 123abc
            image:
              type: string
            sku:
              type: string
              example: 123abc
            name:
              type: string
              example: 123abc
            weight:
              type: number
              format: float
            price:
              type: object
              properties:
                price_base:
                  type: number
                  format: float
                discount_percentage:
                  type: number
                  format: float
                discount_amount:
                  type: number
                  format: float
                price_of_sale:
                  type: number
                  format: float
            taxes:
              type: object
              properties:
                name:
                  type: string
                  example: 123abc
                percentage:
                  type: number
                  format: float
                amount:
                  type: number
                  format: float
            promo_code:
              type: object
              properties:
                name:
                  type: string
                  example: 123abc
                percentage:
                  type: number
                  format: float
                amount:
                  type: number
                  format: float
            quantity:
              type: integer
              format: int64
            price_of_line:
              type: number
              format: float
            observation:
              type: string
              example: 123abc
            created_at:
              type: string
              format: 'date-time'
              example: '2016-10-10T13:26:17+00:00'
    required:
      - uid

  Tax:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: Normal
      is_default:
        type: boolean
        example: true
      value:
        type: number
        format: float
        example: 23
      active:
        type: boolean
        example: true
      created_at:
        type: string
        format: 'date-time'
      updated_at:
        type: string
        format: 'date-time'
    required:
      - id

  Shipping:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: DHL
      image:
        type: string
        example: https://facestore.pt/storemanager/public/images/shipping/dhl.png
      active:
        type: boolean
        example: true
      created_at:
        type: string
        format: 'date-time'
        example: 2012-07-12T15:09:43+00:00
      updated_at:
        type: string
        format: 'date-time'
        example: 2012-07-12T15:09:43+00:00
    required:
      - id

  Payment:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: PayPal
      active:
        type: boolean
        example: true
      created_at:
        type: string
        format: 'date-time'
        example: 2012-08-22T16:05:27+00:00
      updated_at:
        type: string
        format: 'date-time'
        example: 2012-08-22T16:05:27+00:00
    required:
      - id

  Product:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      sku:
        type: string
        example: a123b
      manual:
        type: string
        example: Lorem Ipsum dolus
      url_video:
        type: string
        example: http://youtube.com/foobar/qwocqpeibas2www
      visibility:
        type: array
        description: 'channels that resource are showed'
        items:
          type: string
          enum:
          - 'facebook'
          - 'mobile'
          - 'webstore'
          - 'none'
          - 'all'
      in_homepage:
        type: boolean
        example: true
      is_prefered:
        type: boolean
        example: true
      is_digital:
        type: boolean
        example: true
      url_digital:
        type: string
        example: http://example.com
      shipping_amount:
        type: number
        format: float
        example: 0
      shipping_multiples:
        type: number
        format: float
        example: 0
      is_new:
        type: boolean
        example: false
      i18n:
        type: array
        items:
          $ref: '#/definitions/i18nProduct'
      active:
        type: boolean
        example: true
      created_at:
        type: string
        format: 'date-time'
        example: '2016-10-10T13:26:17+00:00'
      updated_at:
        type: string
        format: 'date-time'
        example: '2016-10-10T13:26:17+00:00'
      expires_at:
        type: string
        format: 'date-time'
        example: '2016-10-10T13:26:17+00:00'
      categories:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
            position:
              type: integer
              format: int64
              example: 1
      brand:
        type: integer
        format: int64
        example: 1
      position:
        type: integer
        format: int64
        example: 1
      id_taxes_group:
        type: integer
        format: int64
        example: 1
      prices:
        type: object
        properties:
          price:
            type: number
            format: float
    required:
      - id

  Variant:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      attributes:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
            id_option:
              type: integer
              format: int64
              example: 1
      sku:
        type: string
        description: 'Sku of a variant'
      quantity:
        type: integer
        format: int64
        example: 1
      active:
        type: boolean
        example: true
      prices:
        type: object
        properties:
          price:
            type: number
            format: float
    required:
      - id

  VariantDiscount:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      id_products:
        type: integer
        format: int64
        example: 1
      id_variant:
        type: integer
        format: int64
        example: 1
      id_products_price:
        type: integer
        format: int64
        example: 1
      discount_percentage:
        type: number
        format: float
        example: 1.5
      discount_price:
        type: number
        format: float
        example: 1.5
      begin_at:
        type: string
        format: 'date-time'
        example: '2018-03-14T15:38:06+00:00'
      end_at:
        type: string
        format: 'date-time'
        example: '2018-03-14T15:38:06+00:00'
      active:
        type: boolean
        example: true
      created_at:
        type: string
        format: 'date-time'
        example: '2016-10-10T13:26:17+00:00'
      updated_at:
        type: string
        format: 'date-time'
        example: '2016-10-10T13:26:17+00:00'
    required:
      - id

  Discount:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      id_products:
        type: integer
        format: int64
        example: 1
      id_products_price:
        type: integer
        format: int64
        example: 1
      discount_percentage:
        type: number
        format: float
        example: 1.5
      discount_price:
        type: number
        format: float
        example: 1.5
      begin_at:
        type: string
        format: 'date-time'
        example: '2018-03-14T15:38:06+00:00'
      end_at:
        type: string
        format: 'date-time'
        example: '2018-03-14T15:38:06+00:00'
      active:
        type: boolean
        example: true
      created_at:
        type: string
        format: 'date-time'
        example: '2016-10-10T13:26:17+00:00'
      updated_at:
        type: string
        format: 'date-time'
        example: '2016-10-10T13:26:17+00:00'
    required:
      - id

  ProductImage:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      image_small:
        type: string
        description: Image of a product
      image_medium:
        type: string
        description: Image of a product
      image_large:
        type: string
        description: Image of a product
      position:
        type: integer
        format: int64
        example: 1

  I18n:
    type: object
    properties:
      locale:
        type: string
        example: 'pt_PT'
      name:
        type: string
      description:
        type: string
    required:
      - name
      - locale

  i18nProduct:
    type: object
    properties:
      locale:
        type: string
        example: 'pt_PT'
      name:
        type: string
      synopsis:
        type: string
      description:
        type: string
        example: Description of product
      characteristics:
        type: string
        example: Characteristics of product
      seo:
        type: object
        properties:
          title:
            type: string
          keywords:
            type: string
          description:
            type: string
    required:
      - locale
      - name

  Currencies:
    type: object
    properties:
      code:
        type: string
      iso:
        type: string
      symbol:
        type: string

  ZipCode:
    type: object
    properties:
      id:
        type: integer
        format: int64
      zip_code:
        type: integer
        format: int64
      state:
        type: string
      city:
        type: string
      neighborhood:
        type: string
      address:
        type: string
      complement:
        type: string




#Responses
  DefaultResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
  NotFoundResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 404
      message:
        type: string
        example: Resource not found.
      status_code:
        type: string
        example: 404
  Locked:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 423
      message:
        type: string
        example: Locked
      status_code:
        type: string
        example: 423
  MetaPartialResponse:
    type: object
    properties:
      total:
        type: integer
        format: int64
      current_page:
        type: integer
        format: int64
        example: 1
      first_page_url:
        type: string
        example: 'http://api.facestore.pt/v1/categories?order_by=id%2Cdesc&page=1'
      from:
        type: integer
        format: int64
      last_page:
        type: integer
        format: int64
      last_page_url:
        type: string
        example: 'http://api.facestore.pt/v1/categories?order_by=id%2Cdesc&page=4'
      next_page_url:
        type: string
        example: 'http://api.facestore.pt/v1/categories?order_by=id%2Cdesc&page=2'
      path:
        type: string
        example: 'http://api.facestore.pt/v1/categories'
      per_page:
        type: integer
        format: int64
      prev_page_url:
        type: string
        example: null
      to:
        type: integer
        format: int64




parameters:
  LimitParam:
    name: limit
    in: query
    description: max records to return
    required: false
    type: integer
    format: int32
  IncludesParam:
    name: includes
    in: query
    description: Include associated objects within response
    required: false
    type: array
    items:
      type: string
    collectionFormat: csv
  OrderByParam:
    name: order_by
    in: query
    description: |
      Specify the field to be sorted, examples:

      - `?order_by=id|desc`
      - `?order_by=updated_at|desc,position|asc`
    required: false
    type: array
    items:
      type: field

securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: APIToken

security:
  - APIKeyHeader: []